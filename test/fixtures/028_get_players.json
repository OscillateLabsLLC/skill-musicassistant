{
  "raw_response": [
    {
      "player_id": "2dfeaa9e-de52-2813-efdc-1c516f9cf3ad",
      "provider": "chromecast--bAbELZ34",
      "type": "player",
      "name": "User’s Bedroom speaker",
      "available": true,
      "device_info": {
        "model": "Google Nest Mini",
        "manufacturer": "Google Inc.",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": "192.168.1.100:8009",
        "mac_address": null
      },
      "supported_features": [
        "power",
        "enqueue",
        "volume_set",
        "next_previous",
        "pause",
        "volume_mute"
      ],
      "state": "idle",
      "elapsed_time": 0.0,
      "elapsed_time_last_updated": 1754705976.7334332,
      "powered": false,
      "volume_level": 33,
      "volume_muted": false,
      "group_childs": [],
      "can_group_with": [],
      "synced_to": null,
      "active_source": "Spotify",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": null,
      "enabled_by_default": true,
      "hidden_by_default": false,
      "expose_to_ha_by_default": true,
      "needs_poll": true,
      "poll_interval": 30,
      "enabled": true,
      "hide_player_in_ui": [
        "when_unavailable",
        "when_group_active",
        "when_synced"
      ],
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 33,
      "display_name": "User’s Bedroom speaker",
      "extra_data": {},
      "announcement_in_progress": false,
      "power_control": "native",
      "volume_control": "native",
      "mute_control": "native",
      "playback_state": "idle",
      "group_members": [],
      "extra_attributes": {}
    },
    {
      "player_id": "a8d4933d-eae2-9288-f42b-771f13c66ee9",
      "provider": "chromecast--bAbELZ34",
      "type": "player",
      "name": "Office Speaker",
      "available": true,
      "device_info": {
        "model": "Google Nest Mini",
        "manufacturer": "Google Inc.",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": "192.168.1.101:8009",
        "mac_address": null
      },
      "supported_features": [
        "power",
        "enqueue",
        "volume_set",
        "next_previous",
        "pause",
        "volume_mute"
      ],
      "state": "playing",
      "elapsed_time": 3.369913,
      "elapsed_time_last_updated": 1754773768.5043063,
      "powered": true,
      "volume_level": 25,
      "volume_muted": false,
      "group_childs": [],
      "can_group_with": [],
      "synced_to": null,
      "active_source": "a8d4933d-eae2-9288-f42b-771f13c66ee9",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": {
        "uri": "http://192.168.1.104:8097/single/p4pzqvod/a8d4933d-eae2-9288-f42b-771f13c66ee9/cc7e77982fe1460caba9657b176c8562.flac",
        "media_type": "track",
        "title": "Lonesome Pine",
        "artist": "Carbon Leaf",
        "album": "Echo Echo",
        "image_url": "http://192.168.1.104:8097/imageproxy?provider=plex--qpZJzhqJ&size=512&fmt=png&path=%252Flibrary%252Fmetadata%252F27377%252Fthumb%252F1710317358",
        "duration": null,
        "queue_id": null,
        "queue_item_id": null,
        "custom_data": null
      },
      "enabled_by_default": true,
      "hidden_by_default": false,
      "expose_to_ha_by_default": true,
      "needs_poll": true,
      "poll_interval": 30,
      "enabled": true,
      "hide_player_in_ui": [
        "when_unavailable",
        "when_group_active",
        "when_synced"
      ],
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 25,
      "display_name": "Office Speaker",
      "extra_data": {},
      "announcement_in_progress": false,
      "power_control": "native",
      "volume_control": "native",
      "mute_control": "native",
      "playback_state": "playing",
      "group_members": [],
      "extra_attributes": {}
    },
    {
      "player_id": "97620eca-d14f-4195-273c-910ce7158530",
      "provider": "chromecast--bAbELZ34",
      "type": "player",
      "name": "Guest Room Speaker",
      "available": true,
      "device_info": {
        "model": "Google Home Mini",
        "manufacturer": "Google Inc.",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": "192.168.1.102:8009",
        "mac_address": null
      },
      "supported_features": [
        "power",
        "enqueue",
        "volume_set",
        "next_previous",
        "pause",
        "volume_mute"
      ],
      "state": "idle",
      "elapsed_time": null,
      "elapsed_time_last_updated": null,
      "powered": false,
      "volume_level": 63,
      "volume_muted": false,
      "group_childs": [],
      "can_group_with": [],
      "synced_to": null,
      "active_source": "97620eca-d14f-4195-273c-910ce7158530",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": null,
      "enabled_by_default": true,
      "hidden_by_default": false,
      "expose_to_ha_by_default": true,
      "needs_poll": true,
      "poll_interval": 30,
      "enabled": true,
      "hide_player_in_ui": [
        "when_unavailable",
        "when_group_active",
        "when_synced"
      ],
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 63,
      "display_name": "Guest Room Speaker",
      "extra_data": {},
      "announcement_in_progress": false,
      "power_control": "native",
      "volume_control": "native",
      "mute_control": "native",
      "playback_state": "idle",
      "group_members": [],
      "extra_attributes": {}
    },
    {
      "player_id": "syncgroup_q3c72abv",
      "provider": "player_group--JB4kaRzM",
      "type": "group",
      "name": "House",
      "available": true,
      "device_info": {
        "model": "Sync Group",
        "manufacturer": "AirPlay",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": null,
        "mac_address": null
      },
      "supported_features": [
        "power",
        "enqueue",
        "multi_device_dsp",
        "gapless_different_samplerate",
        "volume_set",
        "gapless_playback",
        "pause",
        "volume_mute"
      ],
      "state": "idle",
      "elapsed_time": null,
      "elapsed_time_last_updated": null,
      "powered": false,
      "volume_level": 20,
      "volume_muted": null,
      "group_childs": [
        "apcccc45557d81",
        "apccccb967b5af",
        "ap38420b96a5e4",
        "apccccb9c3b305",
        "apcccc11c4333f"
      ],
      "can_group_with": [
        "airplay--cD263UfH"
      ],
      "synced_to": null,
      "active_source": "syncgroup_q3c72abv",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": null,
      "enabled_by_default": true,
      "hidden_by_default": false,
      "expose_to_ha_by_default": true,
      "needs_poll": true,
      "poll_interval": 30,
      "enabled": true,
      "hide_player_in_ui": [
        "when_unavailable"
      ],
      "expose_to_ha": true,
      "icon": "mdi-speaker-multiple",
      "group_volume": 20,
      "display_name": "House",
      "extra_data": {},
      "announcement_in_progress": false,
      "power_control": "native",
      "volume_control": "native",
      "mute_control": "none",
      "playback_state": "idle",
      "group_members": [
        "apcccc45557d81",
        "apccccb967b5af",
        "ap38420b96a5e4",
        "apccccb9c3b305",
        "apcccc11c4333f"
      ],
      "extra_attributes": {}
    },
    {
      "player_id": "f873d9be-3dff-a356-7a46-98fe8fe702e3",
      "provider": "chromecast--bAbELZ34",
      "type": "player",
      "name": "Main Bedroom Speaker",
      "available": true,
      "device_info": {
        "model": "Google Home Mini",
        "manufacturer": "Google Inc.",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": "192.168.1.103:8009",
        "mac_address": null
      },
      "supported_features": [
        "power",
        "enqueue",
        "volume_set",
        "next_previous",
        "pause",
        "volume_mute"
      ],
      "state": "idle",
      "elapsed_time": null,
      "elapsed_time_last_updated": null,
      "powered": false,
      "volume_level": 34,
      "volume_muted": false,
      "group_childs": [],
      "can_group_with": [],
      "synced_to": null,
      "active_source": "f873d9be-3dff-a356-7a46-98fe8fe702e3",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": null,
      "enabled_by_default": true,
      "hidden_by_default": false,
      "expose_to_ha_by_default": true,
      "needs_poll": true,
      "poll_interval": 30,
      "enabled": true,
      "hide_player_in_ui": [
        "when_unavailable",
        "when_group_active",
        "when_synced"
      ],
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 34,
      "display_name": "Main Bedroom Speaker",
      "extra_data": {},
      "announcement_in_progress": false,
      "power_control": "native",
      "volume_control": "native",
      "mute_control": "native",
      "playback_state": "idle",
      "group_members": [],
      "extra_attributes": {}
    },
    {
      "player_id": "media_player.house",
      "provider": "hass_players--saE7sEQ7",
      "type": "player",
      "name": "Multi-Room Speakers",
      "available": true,
      "device_info": {
        "model": "Unknown model",
        "manufacturer": "Unknown Manufacturer",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": null,
        "mac_address": null
      },
      "supported_features": [
        "power",
        "play_announcement",
        "volume_set",
        "pause",
        "volume_mute"
      ],
      "state": "idle",
      "elapsed_time": null,
      "elapsed_time_last_updated": null,
      "powered": true,
      "volume_level": null,
      "volume_muted": null,
      "group_childs": [],
      "can_group_with": [],
      "synced_to": null,
      "active_source": "media_player.house",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": null,
      "enabled_by_default": true,
      "hidden_by_default": false,
      "expose_to_ha_by_default": true,
      "needs_poll": false,
      "poll_interval": 30,
      "enabled": true,
      "hide_player_in_ui": [
        "when_unavailable",
        "when_group_active",
        "when_synced"
      ],
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 0,
      "display_name": "Multi-Room Speakers",
      "extra_data": {
        "entity_registry_id": "546d1e10923029db474b0161a59dd1d9",
        "hass_domain": "group",
        "hass_device_id": null,
        "hass_supported_features": 3209151
      },
      "announcement_in_progress": false,
      "power_control": "native",
      "volume_control": "native",
      "mute_control": "native",
      "playback_state": "idle",
      "group_members": [],
      "extra_attributes": {
        "entity_registry_id": "546d1e10923029db474b0161a59dd1d9",
        "hass_domain": "group",
        "hass_device_id": null,
        "hass_supported_features": 3209151
      }
    },
    {
      "player_id": "apccccb967b5af",
      "provider": "airplay--cD263UfH",
      "type": "player",
      "name": "Guest Room Speaker+ (AirPlay)",
      "available": true,
      "device_info": {
        "model": "aircast",
        "manufacturer": "AirPlay",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": "192.168.1.104",
        "mac_address": null
      },
      "supported_features": [
        "pause",
        "volume_set",
        "multi_device_dsp",
        "set_members"
      ],
      "state": "idle",
      "elapsed_time": null,
      "elapsed_time_last_updated": null,
      "powered": true,
      "volume_level": 20,
      "volume_muted": null,
      "group_childs": [],
      "can_group_with": [
        "airplay--cD263UfH"
      ],
      "synced_to": null,
      "active_source": "apccccb967b5af",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": null,
      "enabled_by_default": true,
      "hidden_by_default": false,
      "expose_to_ha_by_default": true,
      "needs_poll": false,
      "poll_interval": 30,
      "enabled": true,
      "hide_player_in_ui": [
        "when_unavailable",
        "when_group_active",
        "when_synced"
      ],
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 20,
      "display_name": "Guest Room Speaker+ (AirPlay)",
      "extra_data": {},
      "announcement_in_progress": false,
      "power_control": "none",
      "volume_control": "native",
      "mute_control": "none",
      "playback_state": "idle",
      "group_members": [],
      "extra_attributes": {}
    },
    {
      "player_id": "ap720a52ec1a7b",
      "provider": "airplay--cD263UfH",
      "type": "player",
      "name": "Laptop (AirPlay)",
      "available": true,
      "device_info": {
        "model": "Mac15,11",
        "manufacturer": "AirPlay",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": "192.168.1.105",
        "mac_address": null
      },
      "supported_features": [
        "pause",
        "volume_set",
        "multi_device_dsp",
        "set_members"
      ],
      "state": "idle",
      "elapsed_time": null,
      "elapsed_time_last_updated": null,
      "powered": true,
      "volume_level": 20,
      "volume_muted": null,
      "group_childs": [],
      "can_group_with": [
        "airplay--cD263UfH"
      ],
      "synced_to": null,
      "active_source": "ap720a52ec1a7b",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": null,
      "enabled_by_default": true,
      "hidden_by_default": false,
      "expose_to_ha_by_default": true,
      "needs_poll": false,
      "poll_interval": 30,
      "enabled": true,
      "hide_player_in_ui": [
        "when_unavailable",
        "when_group_active",
        "when_synced"
      ],
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 20,
      "display_name": "Laptop (AirPlay)",
      "extra_data": {},
      "announcement_in_progress": false,
      "power_control": "none",
      "volume_control": "native",
      "mute_control": "none",
      "playback_state": "idle",
      "group_members": [],
      "extra_attributes": {}
    },
    {
      "player_id": "RINCON_38420B96A5E401400",
      "provider": "sonos",
      "type": "player",
      "name": "Office",
      "available": true,
      "device_info": {
        "model": "Bookshelf",
        "manufacturer": "SONOS",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": "192.168.1.250",
        "mac_address": null
      },
      "supported_features": [
        "play_announcement",
        "enqueue",
        "gapless_different_samplerate",
        "seek",
        "next_previous",
        "volume_set",
        "gapless_playback",
        "pause",
        "select_source",
        "set_members",
        "volume_mute"
      ],
      "state": "paused",
      "elapsed_time": 68.671,
      "elapsed_time_last_updated": 1754705373.045291,
      "powered": true,
      "volume_level": 14,
      "volume_muted": false,
      "group_childs": [],
      "can_group_with": [
        "sonos"
      ],
      "synced_to": null,
      "active_source": "RINCON_38420B96A5E401400",
      "source_list": [
        {
          "id": "airplay",
          "name": "AirPlay",
          "passive": true,
          "can_play_pause": true,
          "can_seek": true,
          "can_next_previous": true
        },
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": {
        "uri": "mass:queue:RINCON_38420B96A5E401400",
        "media_type": "unknown",
        "title": "My Time Of Day / I've Never Been In Love Before",
        "artist": "Harry Connick, Jr.",
        "album": "In Concert on Broadway",
        "image_url": "http://192.168.1.104:8097/imageproxy?provider=plex--qpZJzhqJ&size=0&fmt=jpeg&path=%252Flibrary%252Fmetadata%252F107970%252Fthumb%252F1724294642",
        "duration": 234560.0,
        "queue_id": "RINCON_38420B96A5E401400",
        "queue_item_id": "cd8138e67b304549b19c0d83b9fba420",
        "custom_data": null
      },
      "enabled_by_default": true,
      "hidden_by_default": false,
      "expose_to_ha_by_default": true,
      "needs_poll": false,
      "poll_interval": 30,
      "enabled": true,
      "hide_player_in_ui": [
        "when_unavailable",
        "when_group_active",
        "when_synced"
      ],
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 14,
      "display_name": "Office",
      "extra_data": {},
      "announcement_in_progress": false,
      "power_control": "none",
      "volume_control": "native",
      "mute_control": "native",
      "playback_state": "paused",
      "group_members": [],
      "extra_attributes": {}
    },
    {
      "player_id": "apcccc3bf129a6",
      "provider": "airplay--cD263UfH",
      "type": "player",
      "name": "Office Speaker+ (AirPlay)",
      "available": true,
      "device_info": {
        "model": "aircast",
        "manufacturer": "AirPlay",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": "192.168.1.104",
        "mac_address": null
      },
      "supported_features": [
        "pause",
        "volume_set",
        "multi_device_dsp",
        "set_members"
      ],
      "state": "idle",
      "elapsed_time": null,
      "elapsed_time_last_updated": null,
      "powered": true,
      "volume_level": 20,
      "volume_muted": null,
      "group_childs": [],
      "can_group_with": [
        "airplay--cD263UfH"
      ],
      "synced_to": null,
      "active_source": "apcccc3bf129a6",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": null,
      "enabled_by_default": true,
      "hidden_by_default": false,
      "expose_to_ha_by_default": true,
      "needs_poll": false,
      "poll_interval": 30,
      "enabled": true,
      "hide_player_in_ui": [
        "when_unavailable",
        "when_group_active",
        "when_synced"
      ],
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 20,
      "display_name": "Office Speaker+ (AirPlay)",
      "extra_data": {},
      "announcement_in_progress": false,
      "power_control": "none",
      "volume_control": "native",
      "mute_control": "none",
      "playback_state": "idle",
      "group_members": [],
      "extra_attributes": {}
    },
    {
      "player_id": "ap38420b96a5e4",
      "provider": "airplay--cD263UfH",
      "type": "player",
      "name": "Office (AirPlay)",
      "available": true,
      "device_info": {
        "model": "Bookshelf",
        "manufacturer": "Sonos",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": "192.168.1.250",
        "mac_address": null
      },
      "supported_features": [
        "pause",
        "volume_set",
        "multi_device_dsp",
        "set_members"
      ],
      "state": "idle",
      "elapsed_time": null,
      "elapsed_time_last_updated": null,
      "powered": true,
      "volume_level": 20,
      "volume_muted": null,
      "group_childs": [],
      "can_group_with": [
        "airplay--cD263UfH"
      ],
      "synced_to": null,
      "active_source": "ap38420b96a5e4",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": null,
      "enabled_by_default": true,
      "hidden_by_default": false,
      "expose_to_ha_by_default": true,
      "needs_poll": false,
      "poll_interval": 30,
      "enabled": true,
      "hide_player_in_ui": [
        "when_unavailable",
        "when_group_active",
        "when_synced"
      ],
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 20,
      "display_name": "Office (AirPlay)",
      "extra_data": {},
      "announcement_in_progress": false,
      "power_control": "none",
      "volume_control": "native",
      "mute_control": "none",
      "playback_state": "idle",
      "group_members": [],
      "extra_attributes": {}
    },
    {
      "player_id": "apcccc11c4333f",
      "provider": "airplay--cD263UfH",
      "type": "player",
      "name": "User’s Bedroom speaker+ (AirPlay)",
      "available": true,
      "device_info": {
        "model": "aircast",
        "manufacturer": "AirPlay",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": "192.168.1.104",
        "mac_address": null
      },
      "supported_features": [
        "pause",
        "volume_set",
        "multi_device_dsp",
        "set_members"
      ],
      "state": "idle",
      "elapsed_time": null,
      "elapsed_time_last_updated": null,
      "powered": true,
      "volume_level": 20,
      "volume_muted": null,
      "group_childs": [],
      "can_group_with": [
        "airplay--cD263UfH"
      ],
      "synced_to": null,
      "active_source": "apcccc11c4333f",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": null,
      "enabled_by_default": true,
      "hidden_by_default": false,
      "expose_to_ha_by_default": true,
      "needs_poll": false,
      "poll_interval": 30,
      "enabled": true,
      "hide_player_in_ui": [
        "when_unavailable",
        "when_group_active",
        "when_synced"
      ],
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 20,
      "display_name": "User’s Bedroom speaker+ (AirPlay)",
      "extra_data": {},
      "announcement_in_progress": false,
      "power_control": "none",
      "volume_control": "native",
      "mute_control": "none",
      "playback_state": "idle",
      "group_members": [],
      "extra_attributes": {}
    },
    {
      "player_id": "ap8a14ed0d704c",
      "provider": "airplay--cD263UfH",
      "type": "player",
      "name": "Emily’s iMac (AirPlay)",
      "available": true,
      "device_info": {
        "model": "iMac21,2",
        "manufacturer": "AirPlay",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": "192.168.1.70",
        "mac_address": null
      },
      "supported_features": [
        "pause",
        "volume_set",
        "multi_device_dsp",
        "set_members"
      ],
      "state": "idle",
      "elapsed_time": null,
      "elapsed_time_last_updated": null,
      "powered": true,
      "volume_level": 20,
      "volume_muted": null,
      "group_childs": [],
      "can_group_with": [
        "airplay--cD263UfH"
      ],
      "synced_to": null,
      "active_source": "ap8a14ed0d704c",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": null,
      "enabled_by_default": true,
      "hidden_by_default": false,
      "expose_to_ha_by_default": true,
      "needs_poll": false,
      "poll_interval": 30,
      "enabled": true,
      "hide_player_in_ui": [
        "when_unavailable",
        "when_group_active",
        "when_synced"
      ],
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 20,
      "display_name": "Emily’s iMac (AirPlay)",
      "extra_data": {},
      "announcement_in_progress": false,
      "power_control": "none",
      "volume_control": "native",
      "mute_control": "none",
      "playback_state": "idle",
      "group_members": [],
      "extra_attributes": {}
    },
    {
      "player_id": "apee3f07a024da",
      "provider": "airplay--cD263UfH",
      "type": "player",
      "name": "Living Room (AirPlay)",
      "available": true,
      "device_info": {
        "model": "Unknown",
        "manufacturer": "AirPlay",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": "192.168.1.71",
        "mac_address": null
      },
      "supported_features": [
        "pause",
        "volume_set",
        "multi_device_dsp",
        "set_members"
      ],
      "state": "idle",
      "elapsed_time": null,
      "elapsed_time_last_updated": null,
      "powered": true,
      "volume_level": 20,
      "volume_muted": null,
      "group_childs": [],
      "can_group_with": [
        "airplay--cD263UfH"
      ],
      "synced_to": null,
      "active_source": "apee3f07a024da",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": null,
      "enabled_by_default": true,
      "hidden_by_default": false,
      "expose_to_ha_by_default": true,
      "needs_poll": false,
      "poll_interval": 30,
      "enabled": true,
      "hide_player_in_ui": [
        "when_unavailable",
        "when_group_active",
        "when_synced"
      ],
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 20,
      "display_name": "Living Room (AirPlay)",
      "extra_data": {},
      "announcement_in_progress": false,
      "power_control": "none",
      "volume_control": "native",
      "mute_control": "none",
      "playback_state": "idle",
      "group_members": [],
      "extra_attributes": {}
    },
    {
      "player_id": "apcccc45557d81",
      "provider": "airplay--cD263UfH",
      "type": "player",
      "name": "Main Bedroom Speaker+ (AirPlay)",
      "available": true,
      "device_info": {
        "model": "aircast",
        "manufacturer": "AirPlay",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": "192.168.1.104",
        "mac_address": null
      },
      "supported_features": [
        "pause",
        "volume_set",
        "multi_device_dsp",
        "set_members"
      ],
      "state": "idle",
      "elapsed_time": null,
      "elapsed_time_last_updated": null,
      "powered": true,
      "volume_level": 20,
      "volume_muted": null,
      "group_childs": [],
      "can_group_with": [
        "airplay--cD263UfH"
      ],
      "synced_to": null,
      "active_source": "apcccc45557d81",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": null,
      "enabled_by_default": true,
      "hidden_by_default": false,
      "expose_to_ha_by_default": true,
      "needs_poll": false,
      "poll_interval": 30,
      "enabled": true,
      "hide_player_in_ui": [
        "when_unavailable",
        "when_group_active",
        "when_synced"
      ],
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 20,
      "display_name": "Main Bedroom Speaker+ (AirPlay)",
      "extra_data": {},
      "announcement_in_progress": false,
      "power_control": "none",
      "volume_control": "native",
      "mute_control": "none",
      "playback_state": "idle",
      "group_members": [],
      "extra_attributes": {}
    },
    {
      "player_id": "ma_eq45rvwkkz",
      "provider": "builtin_player",
      "type": "player",
      "name": "This Device",
      "available": true,
      "device_info": {
        "model": "Unknown model",
        "manufacturer": "Unknown Manufacturer",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": null,
        "mac_address": null
      },
      "supported_features": [
        "pause",
        "volume_set",
        "power",
        "volume_mute"
      ],
      "state": "idle",
      "elapsed_time": 0.0,
      "elapsed_time_last_updated": 1754771667.1991527,
      "powered": false,
      "volume_level": 100,
      "volume_muted": false,
      "group_childs": [],
      "can_group_with": [],
      "synced_to": null,
      "active_source": "ma_eq45rvwkkz",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": {
        "uri": "http://192.168.1.104:8097/flow/DUYSEN9M/ma_eq45rvwkkz/0d308b0a87574f89ba9d7b8a01988d4b.flac",
        "media_type": "flow_stream",
        "title": "Music Assistant",
        "artist": null,
        "album": null,
        "image_url": "https://github.com/home-assistant/brands/raw/master/custom_integrations/mass/icon%402x.png",
        "duration": 346.8969681852691,
        "queue_id": "ma_eq45rvwkkz",
        "queue_item_id": "0d308b0a87574f89ba9d7b8a01988d4b",
        "custom_data": null
      },
      "enabled_by_default": true,
      "hidden_by_default": true,
      "expose_to_ha_by_default": false,
      "needs_poll": true,
      "poll_interval": 30,
      "enabled": true,
      "hide_player_in_ui": [
        "always"
      ],
      "expose_to_ha": false,
      "icon": "mdi-speaker",
      "group_volume": 100,
      "display_name": "This Device",
      "extra_data": {},
      "announcement_in_progress": false,
      "power_control": "native",
      "volume_control": "native",
      "mute_control": "native",
      "playback_state": "idle",
      "group_members": [],
      "extra_attributes": {}
    }
  ],
  "player_count": 16,
  "players": [
    {
      "player_id": "2dfeaa9e-de52-2813-efdc-1c516f9cf3ad",
      "provider": "chromecast--bAbELZ34",
      "type": {
        "_value_": "player",
        "_name_": "PLAYER",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum with possible Player Types.\n\n    player: A regular player.\n    stereo_pair: Same as player but a dedicated stereo pair of 2 speakers.\n    group: A (dedicated) (sync)group player or (universal) playergroup.\n    ",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlayerType._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlayerType"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "PLAYER",
            "STEREO_PAIR",
            "GROUP",
            "UNKNOWN"
          ],
          "_member_map_": {
            "PLAYER": "<circular_ref:PlayerType>",
            "STEREO_PAIR": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "GROUP": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "player": "<circular_ref:PlayerType>",
            "stereo_pair": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "group": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "PLAYER": "<circular_ref:PlayerType>",
          "STEREO_PAIR": {
            "_value_": "stereo_pair",
            "_name_": "STEREO_PAIR",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "GROUP": {
            "_value_": "group",
            "_name_": "GROUP",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "name": "User’s Bedroom speaker",
      "available": true,
      "device_info": {
        "model": "Google Nest Mini",
        "manufacturer": "Google Inc.",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": "192.168.1.100:8009",
        "mac_address": null
      },
      "supported_features": "{<PlayerFeature.NEXT_PREVIOUS: 'next_previous'>, <PlayerFeature.VOLUME_MUTE: 'volume_mute'>, <PlayerFeature.ENQUEUE: 'enqueue'>, <PlayerFeature.POWER: 'power'>, <PlayerFeature.VOLUME_SET: 'volume_set'>, <PlayerFeature.PAUSE: 'pause'>}",
      "playback_state": {
        "_value_": "idle",
        "_name_": "IDLE",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum for the (playback)state of a player.",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlaybackState._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlaybackState"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "IDLE",
            "PAUSED",
            "PLAYING",
            "UNKNOWN"
          ],
          "_member_map_": {
            "IDLE": "<circular_ref:PlaybackState>",
            "PAUSED": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "PLAYING": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "idle": "<circular_ref:PlaybackState>",
            "paused": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "playing": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "IDLE": "<circular_ref:PlaybackState>",
          "PAUSED": {
            "_value_": "paused",
            "_name_": "PAUSED",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "PLAYING": {
            "_value_": "playing",
            "_name_": "PLAYING",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "elapsed_time": 0.0,
      "elapsed_time_last_updated": 1754705976.7334332,
      "powered": false,
      "volume_level": 33,
      "volume_muted": false,
      "group_members": [],
      "can_group_with": "set()",
      "synced_to": null,
      "active_source": "Spotify",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": null,
      "enabled": true,
      "hide_player_in_ui": "{<HidePlayerOption.WHEN_UNAVAILABLE: 'when_unavailable'>, <HidePlayerOption.WHEN_SYNCED: 'when_synced'>, <HidePlayerOption.WHEN_GROUP_ACTIVE: 'when_group_active'>}",
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 33,
      "extra_attributes": {},
      "power_control": "native",
      "volume_control": "native",
      "mute_control": "native"
    },
    {
      "player_id": "a8d4933d-eae2-9288-f42b-771f13c66ee9",
      "provider": "chromecast--bAbELZ34",
      "type": {
        "_value_": "player",
        "_name_": "PLAYER",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum with possible Player Types.\n\n    player: A regular player.\n    stereo_pair: Same as player but a dedicated stereo pair of 2 speakers.\n    group: A (dedicated) (sync)group player or (universal) playergroup.\n    ",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlayerType._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlayerType"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "PLAYER",
            "STEREO_PAIR",
            "GROUP",
            "UNKNOWN"
          ],
          "_member_map_": {
            "PLAYER": "<circular_ref:PlayerType>",
            "STEREO_PAIR": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "GROUP": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "player": "<circular_ref:PlayerType>",
            "stereo_pair": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "group": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "PLAYER": "<circular_ref:PlayerType>",
          "STEREO_PAIR": {
            "_value_": "stereo_pair",
            "_name_": "STEREO_PAIR",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "GROUP": {
            "_value_": "group",
            "_name_": "GROUP",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "name": "Office Speaker",
      "available": true,
      "device_info": {
        "model": "Google Nest Mini",
        "manufacturer": "Google Inc.",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": "192.168.1.101:8009",
        "mac_address": null
      },
      "supported_features": "{<PlayerFeature.NEXT_PREVIOUS: 'next_previous'>, <PlayerFeature.VOLUME_MUTE: 'volume_mute'>, <PlayerFeature.ENQUEUE: 'enqueue'>, <PlayerFeature.POWER: 'power'>, <PlayerFeature.VOLUME_SET: 'volume_set'>, <PlayerFeature.PAUSE: 'pause'>}",
      "playback_state": {
        "_value_": "playing",
        "_name_": "PLAYING",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum for the (playback)state of a player.",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlaybackState._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlaybackState"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "IDLE",
            "PAUSED",
            "PLAYING",
            "UNKNOWN"
          ],
          "_member_map_": {
            "IDLE": {
              "_value_": "idle",
              "_name_": "IDLE",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 0
            },
            "PAUSED": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "PLAYING": "<circular_ref:PlaybackState>",
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "idle": {
              "_value_": "idle",
              "_name_": "IDLE",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 0
            },
            "paused": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "playing": "<circular_ref:PlaybackState>",
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "IDLE": {
            "_value_": "idle",
            "_name_": "IDLE",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 0
          },
          "PAUSED": {
            "_value_": "paused",
            "_name_": "PAUSED",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "PLAYING": "<circular_ref:PlaybackState>",
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 2
      },
      "elapsed_time": 3.369913,
      "elapsed_time_last_updated": 1754773768.5043063,
      "powered": true,
      "volume_level": 25,
      "volume_muted": false,
      "group_members": [],
      "can_group_with": "set()",
      "synced_to": null,
      "active_source": "a8d4933d-eae2-9288-f42b-771f13c66ee9",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": {
        "uri": "http://192.168.1.104:8097/single/p4pzqvod/a8d4933d-eae2-9288-f42b-771f13c66ee9/cc7e77982fe1460caba9657b176c8562.flac",
        "media_type": {
          "_value_": "track",
          "_name_": "TRACK",
          "__objclass__": {
            "_generate_next_value_": {
              "__module__": "enum",
              "__name__": "_generate_next_value_",
              "__qualname__": "StrEnum._generate_next_value_",
              "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
              "__annotations__": {}
            },
            "__module__": "music_assistant_models.enums",
            "__doc__": "Enum for MediaType.",
            "_missing_": {
              "__module__": "music_assistant_models.enums",
              "__name__": "_missing_",
              "__qualname__": "MediaType._missing_",
              "__doc__": "Set default enum member if an unknown value is provided.",
              "__annotations__": {
                "value": "object",
                "return": "MediaType"
              }
            },
            "_new_member_": {},
            "_use_args_": true,
            "_member_names_": [
              "ARTIST",
              "ALBUM",
              "TRACK",
              "PLAYLIST",
              "RADIO",
              "AUDIOBOOK",
              "PODCAST",
              "PODCAST_EPISODE",
              "FOLDER",
              "ANNOUNCEMENT",
              "FLOW_STREAM",
              "PLUGIN_SOURCE",
              "UNKNOWN"
            ],
            "_member_map_": {
              "ARTIST": {
                "_value_": "artist",
                "_name_": "ARTIST",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 0
              },
              "ALBUM": {
                "_value_": "album",
                "_name_": "ALBUM",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 1
              },
              "TRACK": "<circular_ref:MediaType>",
              "PLAYLIST": {
                "_value_": "playlist",
                "_name_": "PLAYLIST",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 3
              },
              "RADIO": {
                "_value_": "radio",
                "_name_": "RADIO",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 4
              },
              "AUDIOBOOK": {
                "_value_": "audiobook",
                "_name_": "AUDIOBOOK",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 5
              },
              "PODCAST": {
                "_value_": "podcast",
                "_name_": "PODCAST",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 6
              },
              "PODCAST_EPISODE": {
                "_value_": "podcast_episode",
                "_name_": "PODCAST_EPISODE",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 7
              },
              "FOLDER": {
                "_value_": "folder",
                "_name_": "FOLDER",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 8
              },
              "ANNOUNCEMENT": {
                "_value_": "announcement",
                "_name_": "ANNOUNCEMENT",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 9
              },
              "FLOW_STREAM": {
                "_value_": "flow_stream",
                "_name_": "FLOW_STREAM",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 10
              },
              "PLUGIN_SOURCE": {
                "_value_": "plugin_source",
                "_name_": "PLUGIN_SOURCE",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 11
              },
              "UNKNOWN": {
                "_value_": "unknown",
                "_name_": "UNKNOWN",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 12
              }
            },
            "_value2member_map_": {
              "artist": {
                "_value_": "artist",
                "_name_": "ARTIST",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 0
              },
              "album": {
                "_value_": "album",
                "_name_": "ALBUM",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 1
              },
              "track": "<circular_ref:MediaType>",
              "playlist": {
                "_value_": "playlist",
                "_name_": "PLAYLIST",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 3
              },
              "radio": {
                "_value_": "radio",
                "_name_": "RADIO",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 4
              },
              "audiobook": {
                "_value_": "audiobook",
                "_name_": "AUDIOBOOK",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 5
              },
              "podcast": {
                "_value_": "podcast",
                "_name_": "PODCAST",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 6
              },
              "podcast_episode": {
                "_value_": "podcast_episode",
                "_name_": "PODCAST_EPISODE",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 7
              },
              "folder": {
                "_value_": "folder",
                "_name_": "FOLDER",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 8
              },
              "announcement": {
                "_value_": "announcement",
                "_name_": "ANNOUNCEMENT",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 9
              },
              "flow_stream": {
                "_value_": "flow_stream",
                "_name_": "FLOW_STREAM",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 10
              },
              "plugin_source": {
                "_value_": "plugin_source",
                "_name_": "PLUGIN_SOURCE",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 11
              },
              "unknown": {
                "_value_": "unknown",
                "_name_": "UNKNOWN",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 12
              }
            },
            "_unhashable_values_": [],
            "_member_type_": {
              "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
              "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
              "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
              "__str__": "<slot wrapper '__str__' of 'str' objects>",
              "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
              "__le__": "<slot wrapper '__le__' of 'str' objects>",
              "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
              "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
              "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
              "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
              "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
              "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
              "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
              "__len__": "<slot wrapper '__len__' of 'str' objects>",
              "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
              "__add__": "<slot wrapper '__add__' of 'str' objects>",
              "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
              "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
              "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
              "encode": "<method 'encode' of 'str' objects>",
              "replace": "<method 'replace' of 'str' objects>",
              "split": "<method 'split' of 'str' objects>",
              "rsplit": "<method 'rsplit' of 'str' objects>",
              "join": "<method 'join' of 'str' objects>",
              "capitalize": "<method 'capitalize' of 'str' objects>",
              "casefold": "<method 'casefold' of 'str' objects>",
              "title": "<method 'title' of 'str' objects>",
              "center": "<method 'center' of 'str' objects>",
              "count": "<method 'count' of 'str' objects>",
              "expandtabs": "<method 'expandtabs' of 'str' objects>",
              "find": "<method 'find' of 'str' objects>",
              "partition": "<method 'partition' of 'str' objects>",
              "index": "<method 'index' of 'str' objects>",
              "ljust": "<method 'ljust' of 'str' objects>",
              "lower": "<method 'lower' of 'str' objects>",
              "lstrip": "<method 'lstrip' of 'str' objects>",
              "rfind": "<method 'rfind' of 'str' objects>",
              "rindex": "<method 'rindex' of 'str' objects>",
              "rjust": "<method 'rjust' of 'str' objects>",
              "rstrip": "<method 'rstrip' of 'str' objects>",
              "rpartition": "<method 'rpartition' of 'str' objects>",
              "splitlines": "<method 'splitlines' of 'str' objects>",
              "strip": "<method 'strip' of 'str' objects>",
              "swapcase": "<method 'swapcase' of 'str' objects>",
              "translate": "<method 'translate' of 'str' objects>",
              "upper": "<method 'upper' of 'str' objects>",
              "startswith": "<method 'startswith' of 'str' objects>",
              "endswith": "<method 'endswith' of 'str' objects>",
              "removeprefix": "<method 'removeprefix' of 'str' objects>",
              "removesuffix": "<method 'removesuffix' of 'str' objects>",
              "isascii": "<method 'isascii' of 'str' objects>",
              "islower": "<method 'islower' of 'str' objects>",
              "isupper": "<method 'isupper' of 'str' objects>",
              "istitle": "<method 'istitle' of 'str' objects>",
              "isspace": "<method 'isspace' of 'str' objects>",
              "isdecimal": "<method 'isdecimal' of 'str' objects>",
              "isdigit": "<method 'isdigit' of 'str' objects>",
              "isnumeric": "<method 'isnumeric' of 'str' objects>",
              "isalpha": "<method 'isalpha' of 'str' objects>",
              "isalnum": "<method 'isalnum' of 'str' objects>",
              "isidentifier": "<method 'isidentifier' of 'str' objects>",
              "isprintable": "<method 'isprintable' of 'str' objects>",
              "zfill": "<method 'zfill' of 'str' objects>",
              "format": "<method 'format' of 'str' objects>",
              "format_map": "<method 'format_map' of 'str' objects>",
              "__format__": "<method '__format__' of 'str' objects>",
              "maketrans": {},
              "__sizeof__": "<method '__sizeof__' of 'str' objects>",
              "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
              "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
            },
            "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
            "ARTIST": {
              "_value_": "artist",
              "_name_": "ARTIST",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 0
            },
            "ALBUM": {
              "_value_": "album",
              "_name_": "ALBUM",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 1
            },
            "TRACK": "<circular_ref:MediaType>",
            "PLAYLIST": {
              "_value_": "playlist",
              "_name_": "PLAYLIST",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 3
            },
            "RADIO": {
              "_value_": "radio",
              "_name_": "RADIO",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 4
            },
            "AUDIOBOOK": {
              "_value_": "audiobook",
              "_name_": "AUDIOBOOK",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 5
            },
            "PODCAST": {
              "_value_": "podcast",
              "_name_": "PODCAST",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 6
            },
            "PODCAST_EPISODE": {
              "_value_": "podcast_episode",
              "_name_": "PODCAST_EPISODE",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 7
            },
            "FOLDER": {
              "_value_": "folder",
              "_name_": "FOLDER",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 8
            },
            "ANNOUNCEMENT": {
              "_value_": "announcement",
              "_name_": "ANNOUNCEMENT",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 9
            },
            "FLOW_STREAM": {
              "_value_": "flow_stream",
              "_name_": "FLOW_STREAM",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 10
            },
            "PLUGIN_SOURCE": {
              "_value_": "plugin_source",
              "_name_": "PLUGIN_SOURCE",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 11
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 12
            },
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "__new__": {}
          },
          "_sort_order_": 2
        },
        "title": "Lonesome Pine",
        "artist": "Carbon Leaf",
        "album": "Echo Echo",
        "image_url": "http://192.168.1.104:8097/imageproxy?provider=plex--qpZJzhqJ&size=512&fmt=png&path=%252Flibrary%252Fmetadata%252F27377%252Fthumb%252F1710317358",
        "duration": null,
        "queue_id": null,
        "queue_item_id": null,
        "custom_data": null
      },
      "enabled": true,
      "hide_player_in_ui": "{<HidePlayerOption.WHEN_UNAVAILABLE: 'when_unavailable'>, <HidePlayerOption.WHEN_SYNCED: 'when_synced'>, <HidePlayerOption.WHEN_GROUP_ACTIVE: 'when_group_active'>}",
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 25,
      "extra_attributes": {},
      "power_control": "native",
      "volume_control": "native",
      "mute_control": "native"
    },
    {
      "player_id": "97620eca-d14f-4195-273c-910ce7158530",
      "provider": "chromecast--bAbELZ34",
      "type": {
        "_value_": "player",
        "_name_": "PLAYER",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum with possible Player Types.\n\n    player: A regular player.\n    stereo_pair: Same as player but a dedicated stereo pair of 2 speakers.\n    group: A (dedicated) (sync)group player or (universal) playergroup.\n    ",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlayerType._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlayerType"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "PLAYER",
            "STEREO_PAIR",
            "GROUP",
            "UNKNOWN"
          ],
          "_member_map_": {
            "PLAYER": "<circular_ref:PlayerType>",
            "STEREO_PAIR": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "GROUP": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "player": "<circular_ref:PlayerType>",
            "stereo_pair": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "group": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "PLAYER": "<circular_ref:PlayerType>",
          "STEREO_PAIR": {
            "_value_": "stereo_pair",
            "_name_": "STEREO_PAIR",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "GROUP": {
            "_value_": "group",
            "_name_": "GROUP",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "name": "Guest Room Speaker",
      "available": true,
      "device_info": {
        "model": "Google Home Mini",
        "manufacturer": "Google Inc.",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": "192.168.1.102:8009",
        "mac_address": null
      },
      "supported_features": "{<PlayerFeature.NEXT_PREVIOUS: 'next_previous'>, <PlayerFeature.VOLUME_MUTE: 'volume_mute'>, <PlayerFeature.ENQUEUE: 'enqueue'>, <PlayerFeature.POWER: 'power'>, <PlayerFeature.VOLUME_SET: 'volume_set'>, <PlayerFeature.PAUSE: 'pause'>}",
      "playback_state": {
        "_value_": "idle",
        "_name_": "IDLE",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum for the (playback)state of a player.",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlaybackState._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlaybackState"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "IDLE",
            "PAUSED",
            "PLAYING",
            "UNKNOWN"
          ],
          "_member_map_": {
            "IDLE": "<circular_ref:PlaybackState>",
            "PAUSED": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "PLAYING": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "idle": "<circular_ref:PlaybackState>",
            "paused": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "playing": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "IDLE": "<circular_ref:PlaybackState>",
          "PAUSED": {
            "_value_": "paused",
            "_name_": "PAUSED",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "PLAYING": {
            "_value_": "playing",
            "_name_": "PLAYING",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "elapsed_time": null,
      "elapsed_time_last_updated": null,
      "powered": false,
      "volume_level": 63,
      "volume_muted": false,
      "group_members": [],
      "can_group_with": "set()",
      "synced_to": null,
      "active_source": "97620eca-d14f-4195-273c-910ce7158530",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": null,
      "enabled": true,
      "hide_player_in_ui": "{<HidePlayerOption.WHEN_UNAVAILABLE: 'when_unavailable'>, <HidePlayerOption.WHEN_SYNCED: 'when_synced'>, <HidePlayerOption.WHEN_GROUP_ACTIVE: 'when_group_active'>}",
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 63,
      "extra_attributes": {},
      "power_control": "native",
      "volume_control": "native",
      "mute_control": "native"
    },
    {
      "player_id": "syncgroup_q3c72abv",
      "provider": "player_group--JB4kaRzM",
      "type": {
        "_value_": "group",
        "_name_": "GROUP",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum with possible Player Types.\n\n    player: A regular player.\n    stereo_pair: Same as player but a dedicated stereo pair of 2 speakers.\n    group: A (dedicated) (sync)group player or (universal) playergroup.\n    ",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlayerType._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlayerType"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "PLAYER",
            "STEREO_PAIR",
            "GROUP",
            "UNKNOWN"
          ],
          "_member_map_": {
            "PLAYER": {
              "_value_": "player",
              "_name_": "PLAYER",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 0
            },
            "STEREO_PAIR": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "GROUP": "<circular_ref:PlayerType>",
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "player": {
              "_value_": "player",
              "_name_": "PLAYER",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 0
            },
            "stereo_pair": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "group": "<circular_ref:PlayerType>",
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "PLAYER": {
            "_value_": "player",
            "_name_": "PLAYER",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 0
          },
          "STEREO_PAIR": {
            "_value_": "stereo_pair",
            "_name_": "STEREO_PAIR",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "GROUP": "<circular_ref:PlayerType>",
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 2
      },
      "name": "House",
      "available": true,
      "device_info": {
        "model": "Sync Group",
        "manufacturer": "AirPlay",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": null,
        "mac_address": null
      },
      "supported_features": "{<PlayerFeature.GAPLESS_DIFFERENT_SAMPLERATE: 'gapless_different_samplerate'>, <PlayerFeature.GAPLESS_PLAYBACK: 'gapless_playback'>, <PlayerFeature.VOLUME_MUTE: 'volume_mute'>, <PlayerFeature.ENQUEUE: 'enqueue'>, <PlayerFeature.POWER: 'power'>, <PlayerFeature.VOLUME_SET: 'volume_set'>, <PlayerFeature.PAUSE: 'pause'>, <PlayerFeature.MULTI_DEVICE_DSP: 'multi_device_dsp'>}",
      "playback_state": {
        "_value_": "idle",
        "_name_": "IDLE",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum for the (playback)state of a player.",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlaybackState._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlaybackState"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "IDLE",
            "PAUSED",
            "PLAYING",
            "UNKNOWN"
          ],
          "_member_map_": {
            "IDLE": "<circular_ref:PlaybackState>",
            "PAUSED": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "PLAYING": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "idle": "<circular_ref:PlaybackState>",
            "paused": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "playing": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "IDLE": "<circular_ref:PlaybackState>",
          "PAUSED": {
            "_value_": "paused",
            "_name_": "PAUSED",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "PLAYING": {
            "_value_": "playing",
            "_name_": "PLAYING",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "elapsed_time": null,
      "elapsed_time_last_updated": null,
      "powered": false,
      "volume_level": 20,
      "volume_muted": null,
      "group_members": [
        "apcccc45557d81",
        "apccccb967b5af",
        "ap38420b96a5e4",
        "apccccb9c3b305",
        "apcccc11c4333f"
      ],
      "can_group_with": "{'airplay--cD263UfH'}",
      "synced_to": null,
      "active_source": "syncgroup_q3c72abv",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": null,
      "enabled": true,
      "hide_player_in_ui": "{<HidePlayerOption.WHEN_UNAVAILABLE: 'when_unavailable'>}",
      "expose_to_ha": true,
      "icon": "mdi-speaker-multiple",
      "group_volume": 20,
      "extra_attributes": {},
      "power_control": "native",
      "volume_control": "native",
      "mute_control": "none"
    },
    {
      "player_id": "f873d9be-3dff-a356-7a46-98fe8fe702e3",
      "provider": "chromecast--bAbELZ34",
      "type": {
        "_value_": "player",
        "_name_": "PLAYER",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum with possible Player Types.\n\n    player: A regular player.\n    stereo_pair: Same as player but a dedicated stereo pair of 2 speakers.\n    group: A (dedicated) (sync)group player or (universal) playergroup.\n    ",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlayerType._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlayerType"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "PLAYER",
            "STEREO_PAIR",
            "GROUP",
            "UNKNOWN"
          ],
          "_member_map_": {
            "PLAYER": "<circular_ref:PlayerType>",
            "STEREO_PAIR": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "GROUP": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "player": "<circular_ref:PlayerType>",
            "stereo_pair": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "group": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "PLAYER": "<circular_ref:PlayerType>",
          "STEREO_PAIR": {
            "_value_": "stereo_pair",
            "_name_": "STEREO_PAIR",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "GROUP": {
            "_value_": "group",
            "_name_": "GROUP",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "name": "Main Bedroom Speaker",
      "available": true,
      "device_info": {
        "model": "Google Home Mini",
        "manufacturer": "Google Inc.",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": "192.168.1.103:8009",
        "mac_address": null
      },
      "supported_features": "{<PlayerFeature.NEXT_PREVIOUS: 'next_previous'>, <PlayerFeature.VOLUME_MUTE: 'volume_mute'>, <PlayerFeature.ENQUEUE: 'enqueue'>, <PlayerFeature.POWER: 'power'>, <PlayerFeature.VOLUME_SET: 'volume_set'>, <PlayerFeature.PAUSE: 'pause'>}",
      "playback_state": {
        "_value_": "idle",
        "_name_": "IDLE",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum for the (playback)state of a player.",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlaybackState._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlaybackState"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "IDLE",
            "PAUSED",
            "PLAYING",
            "UNKNOWN"
          ],
          "_member_map_": {
            "IDLE": "<circular_ref:PlaybackState>",
            "PAUSED": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "PLAYING": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "idle": "<circular_ref:PlaybackState>",
            "paused": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "playing": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "IDLE": "<circular_ref:PlaybackState>",
          "PAUSED": {
            "_value_": "paused",
            "_name_": "PAUSED",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "PLAYING": {
            "_value_": "playing",
            "_name_": "PLAYING",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "elapsed_time": null,
      "elapsed_time_last_updated": null,
      "powered": false,
      "volume_level": 34,
      "volume_muted": false,
      "group_members": [],
      "can_group_with": "set()",
      "synced_to": null,
      "active_source": "f873d9be-3dff-a356-7a46-98fe8fe702e3",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": null,
      "enabled": true,
      "hide_player_in_ui": "{<HidePlayerOption.WHEN_UNAVAILABLE: 'when_unavailable'>, <HidePlayerOption.WHEN_SYNCED: 'when_synced'>, <HidePlayerOption.WHEN_GROUP_ACTIVE: 'when_group_active'>}",
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 34,
      "extra_attributes": {},
      "power_control": "native",
      "volume_control": "native",
      "mute_control": "native"
    },
    {
      "player_id": "media_player.house",
      "provider": "hass_players--saE7sEQ7",
      "type": {
        "_value_": "player",
        "_name_": "PLAYER",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum with possible Player Types.\n\n    player: A regular player.\n    stereo_pair: Same as player but a dedicated stereo pair of 2 speakers.\n    group: A (dedicated) (sync)group player or (universal) playergroup.\n    ",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlayerType._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlayerType"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "PLAYER",
            "STEREO_PAIR",
            "GROUP",
            "UNKNOWN"
          ],
          "_member_map_": {
            "PLAYER": "<circular_ref:PlayerType>",
            "STEREO_PAIR": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "GROUP": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "player": "<circular_ref:PlayerType>",
            "stereo_pair": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "group": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "PLAYER": "<circular_ref:PlayerType>",
          "STEREO_PAIR": {
            "_value_": "stereo_pair",
            "_name_": "STEREO_PAIR",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "GROUP": {
            "_value_": "group",
            "_name_": "GROUP",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "name": "Multi-Room Speakers",
      "available": true,
      "device_info": {
        "model": "Unknown model",
        "manufacturer": "Unknown Manufacturer",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": null,
        "mac_address": null
      },
      "supported_features": "{<PlayerFeature.VOLUME_MUTE: 'volume_mute'>, <PlayerFeature.POWER: 'power'>, <PlayerFeature.VOLUME_SET: 'volume_set'>, <PlayerFeature.PLAY_ANNOUNCEMENT: 'play_announcement'>, <PlayerFeature.PAUSE: 'pause'>}",
      "playback_state": {
        "_value_": "idle",
        "_name_": "IDLE",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum for the (playback)state of a player.",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlaybackState._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlaybackState"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "IDLE",
            "PAUSED",
            "PLAYING",
            "UNKNOWN"
          ],
          "_member_map_": {
            "IDLE": "<circular_ref:PlaybackState>",
            "PAUSED": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "PLAYING": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "idle": "<circular_ref:PlaybackState>",
            "paused": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "playing": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "IDLE": "<circular_ref:PlaybackState>",
          "PAUSED": {
            "_value_": "paused",
            "_name_": "PAUSED",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "PLAYING": {
            "_value_": "playing",
            "_name_": "PLAYING",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "elapsed_time": null,
      "elapsed_time_last_updated": null,
      "powered": true,
      "volume_level": null,
      "volume_muted": null,
      "group_members": [],
      "can_group_with": "set()",
      "synced_to": null,
      "active_source": "media_player.house",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": null,
      "enabled": true,
      "hide_player_in_ui": "{<HidePlayerOption.WHEN_UNAVAILABLE: 'when_unavailable'>, <HidePlayerOption.WHEN_SYNCED: 'when_synced'>, <HidePlayerOption.WHEN_GROUP_ACTIVE: 'when_group_active'>}",
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 0,
      "extra_attributes": {
        "entity_registry_id": "546d1e10923029db474b0161a59dd1d9",
        "hass_domain": "group",
        "hass_device_id": null,
        "hass_supported_features": 3209151
      },
      "power_control": "native",
      "volume_control": "native",
      "mute_control": "native"
    },
    {
      "player_id": "apccccb967b5af",
      "provider": "airplay--cD263UfH",
      "type": {
        "_value_": "player",
        "_name_": "PLAYER",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum with possible Player Types.\n\n    player: A regular player.\n    stereo_pair: Same as player but a dedicated stereo pair of 2 speakers.\n    group: A (dedicated) (sync)group player or (universal) playergroup.\n    ",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlayerType._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlayerType"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "PLAYER",
            "STEREO_PAIR",
            "GROUP",
            "UNKNOWN"
          ],
          "_member_map_": {
            "PLAYER": "<circular_ref:PlayerType>",
            "STEREO_PAIR": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "GROUP": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "player": "<circular_ref:PlayerType>",
            "stereo_pair": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "group": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "PLAYER": "<circular_ref:PlayerType>",
          "STEREO_PAIR": {
            "_value_": "stereo_pair",
            "_name_": "STEREO_PAIR",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "GROUP": {
            "_value_": "group",
            "_name_": "GROUP",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "name": "Guest Room Speaker+ (AirPlay)",
      "available": true,
      "device_info": {
        "model": "aircast",
        "manufacturer": "AirPlay",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": "192.168.1.104",
        "mac_address": null
      },
      "supported_features": "{<PlayerFeature.SET_MEMBERS: 'set_members'>, <PlayerFeature.VOLUME_SET: 'volume_set'>, <PlayerFeature.PAUSE: 'pause'>, <PlayerFeature.MULTI_DEVICE_DSP: 'multi_device_dsp'>}",
      "playback_state": {
        "_value_": "idle",
        "_name_": "IDLE",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum for the (playback)state of a player.",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlaybackState._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlaybackState"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "IDLE",
            "PAUSED",
            "PLAYING",
            "UNKNOWN"
          ],
          "_member_map_": {
            "IDLE": "<circular_ref:PlaybackState>",
            "PAUSED": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "PLAYING": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "idle": "<circular_ref:PlaybackState>",
            "paused": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "playing": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "IDLE": "<circular_ref:PlaybackState>",
          "PAUSED": {
            "_value_": "paused",
            "_name_": "PAUSED",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "PLAYING": {
            "_value_": "playing",
            "_name_": "PLAYING",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "elapsed_time": null,
      "elapsed_time_last_updated": null,
      "powered": true,
      "volume_level": 20,
      "volume_muted": null,
      "group_members": [],
      "can_group_with": "{'airplay--cD263UfH'}",
      "synced_to": null,
      "active_source": "apccccb967b5af",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": null,
      "enabled": true,
      "hide_player_in_ui": "{<HidePlayerOption.WHEN_UNAVAILABLE: 'when_unavailable'>, <HidePlayerOption.WHEN_SYNCED: 'when_synced'>, <HidePlayerOption.WHEN_GROUP_ACTIVE: 'when_group_active'>}",
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 20,
      "extra_attributes": {},
      "power_control": "none",
      "volume_control": "native",
      "mute_control": "none"
    },
    {
      "player_id": "ap720a52ec1a7b",
      "provider": "airplay--cD263UfH",
      "type": {
        "_value_": "player",
        "_name_": "PLAYER",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum with possible Player Types.\n\n    player: A regular player.\n    stereo_pair: Same as player but a dedicated stereo pair of 2 speakers.\n    group: A (dedicated) (sync)group player or (universal) playergroup.\n    ",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlayerType._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlayerType"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "PLAYER",
            "STEREO_PAIR",
            "GROUP",
            "UNKNOWN"
          ],
          "_member_map_": {
            "PLAYER": "<circular_ref:PlayerType>",
            "STEREO_PAIR": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "GROUP": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "player": "<circular_ref:PlayerType>",
            "stereo_pair": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "group": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "PLAYER": "<circular_ref:PlayerType>",
          "STEREO_PAIR": {
            "_value_": "stereo_pair",
            "_name_": "STEREO_PAIR",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "GROUP": {
            "_value_": "group",
            "_name_": "GROUP",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "name": "Laptop (AirPlay)",
      "available": true,
      "device_info": {
        "model": "Mac15,11",
        "manufacturer": "AirPlay",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": "192.168.1.105",
        "mac_address": null
      },
      "supported_features": "{<PlayerFeature.SET_MEMBERS: 'set_members'>, <PlayerFeature.VOLUME_SET: 'volume_set'>, <PlayerFeature.PAUSE: 'pause'>, <PlayerFeature.MULTI_DEVICE_DSP: 'multi_device_dsp'>}",
      "playback_state": {
        "_value_": "idle",
        "_name_": "IDLE",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum for the (playback)state of a player.",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlaybackState._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlaybackState"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "IDLE",
            "PAUSED",
            "PLAYING",
            "UNKNOWN"
          ],
          "_member_map_": {
            "IDLE": "<circular_ref:PlaybackState>",
            "PAUSED": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "PLAYING": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "idle": "<circular_ref:PlaybackState>",
            "paused": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "playing": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "IDLE": "<circular_ref:PlaybackState>",
          "PAUSED": {
            "_value_": "paused",
            "_name_": "PAUSED",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "PLAYING": {
            "_value_": "playing",
            "_name_": "PLAYING",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "elapsed_time": null,
      "elapsed_time_last_updated": null,
      "powered": true,
      "volume_level": 20,
      "volume_muted": null,
      "group_members": [],
      "can_group_with": "{'airplay--cD263UfH'}",
      "synced_to": null,
      "active_source": "ap720a52ec1a7b",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": null,
      "enabled": true,
      "hide_player_in_ui": "{<HidePlayerOption.WHEN_UNAVAILABLE: 'when_unavailable'>, <HidePlayerOption.WHEN_SYNCED: 'when_synced'>, <HidePlayerOption.WHEN_GROUP_ACTIVE: 'when_group_active'>}",
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 20,
      "extra_attributes": {},
      "power_control": "none",
      "volume_control": "native",
      "mute_control": "none"
    },
    {
      "player_id": "RINCON_38420B96A5E401400",
      "provider": "sonos",
      "type": {
        "_value_": "player",
        "_name_": "PLAYER",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum with possible Player Types.\n\n    player: A regular player.\n    stereo_pair: Same as player but a dedicated stereo pair of 2 speakers.\n    group: A (dedicated) (sync)group player or (universal) playergroup.\n    ",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlayerType._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlayerType"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "PLAYER",
            "STEREO_PAIR",
            "GROUP",
            "UNKNOWN"
          ],
          "_member_map_": {
            "PLAYER": "<circular_ref:PlayerType>",
            "STEREO_PAIR": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "GROUP": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "player": "<circular_ref:PlayerType>",
            "stereo_pair": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "group": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "PLAYER": "<circular_ref:PlayerType>",
          "STEREO_PAIR": {
            "_value_": "stereo_pair",
            "_name_": "STEREO_PAIR",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "GROUP": {
            "_value_": "group",
            "_name_": "GROUP",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "name": "Office",
      "available": true,
      "device_info": {
        "model": "Bookshelf",
        "manufacturer": "SONOS",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": "192.168.1.250",
        "mac_address": null
      },
      "supported_features": "{<PlayerFeature.SELECT_SOURCE: 'select_source'>, <PlayerFeature.GAPLESS_DIFFERENT_SAMPLERATE: 'gapless_different_samplerate'>, <PlayerFeature.NEXT_PREVIOUS: 'next_previous'>, <PlayerFeature.GAPLESS_PLAYBACK: 'gapless_playback'>, <PlayerFeature.SET_MEMBERS: 'set_members'>, <PlayerFeature.VOLUME_MUTE: 'volume_mute'>, <PlayerFeature.ENQUEUE: 'enqueue'>, <PlayerFeature.VOLUME_SET: 'volume_set'>, <PlayerFeature.PLAY_ANNOUNCEMENT: 'play_announcement'>, <PlayerFeature.PAUSE: 'pause'>, <PlayerFeature.SEEK: 'seek'>}",
      "playback_state": {
        "_value_": "paused",
        "_name_": "PAUSED",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum for the (playback)state of a player.",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlaybackState._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlaybackState"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "IDLE",
            "PAUSED",
            "PLAYING",
            "UNKNOWN"
          ],
          "_member_map_": {
            "IDLE": {
              "_value_": "idle",
              "_name_": "IDLE",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 0
            },
            "PAUSED": "<circular_ref:PlaybackState>",
            "PLAYING": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "idle": {
              "_value_": "idle",
              "_name_": "IDLE",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 0
            },
            "paused": "<circular_ref:PlaybackState>",
            "playing": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "IDLE": {
            "_value_": "idle",
            "_name_": "IDLE",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 0
          },
          "PAUSED": "<circular_ref:PlaybackState>",
          "PLAYING": {
            "_value_": "playing",
            "_name_": "PLAYING",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 1
      },
      "elapsed_time": 68.671,
      "elapsed_time_last_updated": 1754705373.045291,
      "powered": true,
      "volume_level": 14,
      "volume_muted": false,
      "group_members": [],
      "can_group_with": "{'sonos'}",
      "synced_to": null,
      "active_source": "RINCON_38420B96A5E401400",
      "source_list": [
        {
          "id": "airplay",
          "name": "AirPlay",
          "passive": true,
          "can_play_pause": true,
          "can_seek": true,
          "can_next_previous": true
        },
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": {
        "uri": "mass:queue:RINCON_38420B96A5E401400",
        "media_type": {
          "_value_": "unknown",
          "_name_": "UNKNOWN",
          "__objclass__": {
            "_generate_next_value_": {
              "__module__": "enum",
              "__name__": "_generate_next_value_",
              "__qualname__": "StrEnum._generate_next_value_",
              "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
              "__annotations__": {}
            },
            "__module__": "music_assistant_models.enums",
            "__doc__": "Enum for MediaType.",
            "_missing_": {
              "__module__": "music_assistant_models.enums",
              "__name__": "_missing_",
              "__qualname__": "MediaType._missing_",
              "__doc__": "Set default enum member if an unknown value is provided.",
              "__annotations__": {
                "value": "object",
                "return": "MediaType"
              }
            },
            "_new_member_": {},
            "_use_args_": true,
            "_member_names_": [
              "ARTIST",
              "ALBUM",
              "TRACK",
              "PLAYLIST",
              "RADIO",
              "AUDIOBOOK",
              "PODCAST",
              "PODCAST_EPISODE",
              "FOLDER",
              "ANNOUNCEMENT",
              "FLOW_STREAM",
              "PLUGIN_SOURCE",
              "UNKNOWN"
            ],
            "_member_map_": {
              "ARTIST": {
                "_value_": "artist",
                "_name_": "ARTIST",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 0
              },
              "ALBUM": {
                "_value_": "album",
                "_name_": "ALBUM",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 1
              },
              "TRACK": {
                "_value_": "track",
                "_name_": "TRACK",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 2
              },
              "PLAYLIST": {
                "_value_": "playlist",
                "_name_": "PLAYLIST",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 3
              },
              "RADIO": {
                "_value_": "radio",
                "_name_": "RADIO",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 4
              },
              "AUDIOBOOK": {
                "_value_": "audiobook",
                "_name_": "AUDIOBOOK",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 5
              },
              "PODCAST": {
                "_value_": "podcast",
                "_name_": "PODCAST",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 6
              },
              "PODCAST_EPISODE": {
                "_value_": "podcast_episode",
                "_name_": "PODCAST_EPISODE",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 7
              },
              "FOLDER": {
                "_value_": "folder",
                "_name_": "FOLDER",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 8
              },
              "ANNOUNCEMENT": {
                "_value_": "announcement",
                "_name_": "ANNOUNCEMENT",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 9
              },
              "FLOW_STREAM": {
                "_value_": "flow_stream",
                "_name_": "FLOW_STREAM",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 10
              },
              "PLUGIN_SOURCE": {
                "_value_": "plugin_source",
                "_name_": "PLUGIN_SOURCE",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 11
              },
              "UNKNOWN": "<circular_ref:MediaType>"
            },
            "_value2member_map_": {
              "artist": {
                "_value_": "artist",
                "_name_": "ARTIST",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 0
              },
              "album": {
                "_value_": "album",
                "_name_": "ALBUM",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 1
              },
              "track": {
                "_value_": "track",
                "_name_": "TRACK",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 2
              },
              "playlist": {
                "_value_": "playlist",
                "_name_": "PLAYLIST",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 3
              },
              "radio": {
                "_value_": "radio",
                "_name_": "RADIO",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 4
              },
              "audiobook": {
                "_value_": "audiobook",
                "_name_": "AUDIOBOOK",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 5
              },
              "podcast": {
                "_value_": "podcast",
                "_name_": "PODCAST",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 6
              },
              "podcast_episode": {
                "_value_": "podcast_episode",
                "_name_": "PODCAST_EPISODE",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 7
              },
              "folder": {
                "_value_": "folder",
                "_name_": "FOLDER",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 8
              },
              "announcement": {
                "_value_": "announcement",
                "_name_": "ANNOUNCEMENT",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 9
              },
              "flow_stream": {
                "_value_": "flow_stream",
                "_name_": "FLOW_STREAM",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 10
              },
              "plugin_source": {
                "_value_": "plugin_source",
                "_name_": "PLUGIN_SOURCE",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 11
              },
              "unknown": "<circular_ref:MediaType>"
            },
            "_unhashable_values_": [],
            "_member_type_": {
              "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
              "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
              "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
              "__str__": "<slot wrapper '__str__' of 'str' objects>",
              "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
              "__le__": "<slot wrapper '__le__' of 'str' objects>",
              "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
              "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
              "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
              "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
              "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
              "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
              "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
              "__len__": "<slot wrapper '__len__' of 'str' objects>",
              "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
              "__add__": "<slot wrapper '__add__' of 'str' objects>",
              "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
              "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
              "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
              "encode": "<method 'encode' of 'str' objects>",
              "replace": "<method 'replace' of 'str' objects>",
              "split": "<method 'split' of 'str' objects>",
              "rsplit": "<method 'rsplit' of 'str' objects>",
              "join": "<method 'join' of 'str' objects>",
              "capitalize": "<method 'capitalize' of 'str' objects>",
              "casefold": "<method 'casefold' of 'str' objects>",
              "title": "<method 'title' of 'str' objects>",
              "center": "<method 'center' of 'str' objects>",
              "count": "<method 'count' of 'str' objects>",
              "expandtabs": "<method 'expandtabs' of 'str' objects>",
              "find": "<method 'find' of 'str' objects>",
              "partition": "<method 'partition' of 'str' objects>",
              "index": "<method 'index' of 'str' objects>",
              "ljust": "<method 'ljust' of 'str' objects>",
              "lower": "<method 'lower' of 'str' objects>",
              "lstrip": "<method 'lstrip' of 'str' objects>",
              "rfind": "<method 'rfind' of 'str' objects>",
              "rindex": "<method 'rindex' of 'str' objects>",
              "rjust": "<method 'rjust' of 'str' objects>",
              "rstrip": "<method 'rstrip' of 'str' objects>",
              "rpartition": "<method 'rpartition' of 'str' objects>",
              "splitlines": "<method 'splitlines' of 'str' objects>",
              "strip": "<method 'strip' of 'str' objects>",
              "swapcase": "<method 'swapcase' of 'str' objects>",
              "translate": "<method 'translate' of 'str' objects>",
              "upper": "<method 'upper' of 'str' objects>",
              "startswith": "<method 'startswith' of 'str' objects>",
              "endswith": "<method 'endswith' of 'str' objects>",
              "removeprefix": "<method 'removeprefix' of 'str' objects>",
              "removesuffix": "<method 'removesuffix' of 'str' objects>",
              "isascii": "<method 'isascii' of 'str' objects>",
              "islower": "<method 'islower' of 'str' objects>",
              "isupper": "<method 'isupper' of 'str' objects>",
              "istitle": "<method 'istitle' of 'str' objects>",
              "isspace": "<method 'isspace' of 'str' objects>",
              "isdecimal": "<method 'isdecimal' of 'str' objects>",
              "isdigit": "<method 'isdigit' of 'str' objects>",
              "isnumeric": "<method 'isnumeric' of 'str' objects>",
              "isalpha": "<method 'isalpha' of 'str' objects>",
              "isalnum": "<method 'isalnum' of 'str' objects>",
              "isidentifier": "<method 'isidentifier' of 'str' objects>",
              "isprintable": "<method 'isprintable' of 'str' objects>",
              "zfill": "<method 'zfill' of 'str' objects>",
              "format": "<method 'format' of 'str' objects>",
              "format_map": "<method 'format_map' of 'str' objects>",
              "__format__": "<method '__format__' of 'str' objects>",
              "maketrans": {},
              "__sizeof__": "<method '__sizeof__' of 'str' objects>",
              "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
              "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
            },
            "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
            "ARTIST": {
              "_value_": "artist",
              "_name_": "ARTIST",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 0
            },
            "ALBUM": {
              "_value_": "album",
              "_name_": "ALBUM",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 1
            },
            "TRACK": {
              "_value_": "track",
              "_name_": "TRACK",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 2
            },
            "PLAYLIST": {
              "_value_": "playlist",
              "_name_": "PLAYLIST",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 3
            },
            "RADIO": {
              "_value_": "radio",
              "_name_": "RADIO",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 4
            },
            "AUDIOBOOK": {
              "_value_": "audiobook",
              "_name_": "AUDIOBOOK",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 5
            },
            "PODCAST": {
              "_value_": "podcast",
              "_name_": "PODCAST",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 6
            },
            "PODCAST_EPISODE": {
              "_value_": "podcast_episode",
              "_name_": "PODCAST_EPISODE",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 7
            },
            "FOLDER": {
              "_value_": "folder",
              "_name_": "FOLDER",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 8
            },
            "ANNOUNCEMENT": {
              "_value_": "announcement",
              "_name_": "ANNOUNCEMENT",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 9
            },
            "FLOW_STREAM": {
              "_value_": "flow_stream",
              "_name_": "FLOW_STREAM",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 10
            },
            "PLUGIN_SOURCE": {
              "_value_": "plugin_source",
              "_name_": "PLUGIN_SOURCE",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 11
            },
            "UNKNOWN": "<circular_ref:MediaType>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "__new__": {}
          },
          "_sort_order_": 12
        },
        "title": "My Time Of Day / I've Never Been In Love Before",
        "artist": "Harry Connick, Jr.",
        "album": "In Concert on Broadway",
        "image_url": "http://192.168.1.104:8097/imageproxy?provider=plex--qpZJzhqJ&size=0&fmt=jpeg&path=%252Flibrary%252Fmetadata%252F107970%252Fthumb%252F1724294642",
        "duration": 234560,
        "queue_id": "RINCON_38420B96A5E401400",
        "queue_item_id": "cd8138e67b304549b19c0d83b9fba420",
        "custom_data": null
      },
      "enabled": true,
      "hide_player_in_ui": "{<HidePlayerOption.WHEN_UNAVAILABLE: 'when_unavailable'>, <HidePlayerOption.WHEN_SYNCED: 'when_synced'>, <HidePlayerOption.WHEN_GROUP_ACTIVE: 'when_group_active'>}",
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 14,
      "extra_attributes": {},
      "power_control": "none",
      "volume_control": "native",
      "mute_control": "native"
    },
    {
      "player_id": "apcccc3bf129a6",
      "provider": "airplay--cD263UfH",
      "type": {
        "_value_": "player",
        "_name_": "PLAYER",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum with possible Player Types.\n\n    player: A regular player.\n    stereo_pair: Same as player but a dedicated stereo pair of 2 speakers.\n    group: A (dedicated) (sync)group player or (universal) playergroup.\n    ",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlayerType._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlayerType"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "PLAYER",
            "STEREO_PAIR",
            "GROUP",
            "UNKNOWN"
          ],
          "_member_map_": {
            "PLAYER": "<circular_ref:PlayerType>",
            "STEREO_PAIR": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "GROUP": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "player": "<circular_ref:PlayerType>",
            "stereo_pair": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "group": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "PLAYER": "<circular_ref:PlayerType>",
          "STEREO_PAIR": {
            "_value_": "stereo_pair",
            "_name_": "STEREO_PAIR",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "GROUP": {
            "_value_": "group",
            "_name_": "GROUP",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "name": "Office Speaker+ (AirPlay)",
      "available": true,
      "device_info": {
        "model": "aircast",
        "manufacturer": "AirPlay",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": "192.168.1.104",
        "mac_address": null
      },
      "supported_features": "{<PlayerFeature.SET_MEMBERS: 'set_members'>, <PlayerFeature.VOLUME_SET: 'volume_set'>, <PlayerFeature.PAUSE: 'pause'>, <PlayerFeature.MULTI_DEVICE_DSP: 'multi_device_dsp'>}",
      "playback_state": {
        "_value_": "idle",
        "_name_": "IDLE",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum for the (playback)state of a player.",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlaybackState._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlaybackState"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "IDLE",
            "PAUSED",
            "PLAYING",
            "UNKNOWN"
          ],
          "_member_map_": {
            "IDLE": "<circular_ref:PlaybackState>",
            "PAUSED": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "PLAYING": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "idle": "<circular_ref:PlaybackState>",
            "paused": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "playing": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "IDLE": "<circular_ref:PlaybackState>",
          "PAUSED": {
            "_value_": "paused",
            "_name_": "PAUSED",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "PLAYING": {
            "_value_": "playing",
            "_name_": "PLAYING",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "elapsed_time": null,
      "elapsed_time_last_updated": null,
      "powered": true,
      "volume_level": 20,
      "volume_muted": null,
      "group_members": [],
      "can_group_with": "{'airplay--cD263UfH'}",
      "synced_to": null,
      "active_source": "apcccc3bf129a6",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": null,
      "enabled": true,
      "hide_player_in_ui": "{<HidePlayerOption.WHEN_UNAVAILABLE: 'when_unavailable'>, <HidePlayerOption.WHEN_SYNCED: 'when_synced'>, <HidePlayerOption.WHEN_GROUP_ACTIVE: 'when_group_active'>}",
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 20,
      "extra_attributes": {},
      "power_control": "none",
      "volume_control": "native",
      "mute_control": "none"
    },
    {
      "player_id": "ap38420b96a5e4",
      "provider": "airplay--cD263UfH",
      "type": {
        "_value_": "player",
        "_name_": "PLAYER",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum with possible Player Types.\n\n    player: A regular player.\n    stereo_pair: Same as player but a dedicated stereo pair of 2 speakers.\n    group: A (dedicated) (sync)group player or (universal) playergroup.\n    ",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlayerType._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlayerType"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "PLAYER",
            "STEREO_PAIR",
            "GROUP",
            "UNKNOWN"
          ],
          "_member_map_": {
            "PLAYER": "<circular_ref:PlayerType>",
            "STEREO_PAIR": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "GROUP": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "player": "<circular_ref:PlayerType>",
            "stereo_pair": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "group": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "PLAYER": "<circular_ref:PlayerType>",
          "STEREO_PAIR": {
            "_value_": "stereo_pair",
            "_name_": "STEREO_PAIR",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "GROUP": {
            "_value_": "group",
            "_name_": "GROUP",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "name": "Office (AirPlay)",
      "available": true,
      "device_info": {
        "model": "Bookshelf",
        "manufacturer": "Sonos",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": "192.168.1.250",
        "mac_address": null
      },
      "supported_features": "{<PlayerFeature.SET_MEMBERS: 'set_members'>, <PlayerFeature.VOLUME_SET: 'volume_set'>, <PlayerFeature.PAUSE: 'pause'>, <PlayerFeature.MULTI_DEVICE_DSP: 'multi_device_dsp'>}",
      "playback_state": {
        "_value_": "idle",
        "_name_": "IDLE",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum for the (playback)state of a player.",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlaybackState._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlaybackState"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "IDLE",
            "PAUSED",
            "PLAYING",
            "UNKNOWN"
          ],
          "_member_map_": {
            "IDLE": "<circular_ref:PlaybackState>",
            "PAUSED": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "PLAYING": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "idle": "<circular_ref:PlaybackState>",
            "paused": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "playing": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "IDLE": "<circular_ref:PlaybackState>",
          "PAUSED": {
            "_value_": "paused",
            "_name_": "PAUSED",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "PLAYING": {
            "_value_": "playing",
            "_name_": "PLAYING",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "elapsed_time": null,
      "elapsed_time_last_updated": null,
      "powered": true,
      "volume_level": 20,
      "volume_muted": null,
      "group_members": [],
      "can_group_with": "{'airplay--cD263UfH'}",
      "synced_to": null,
      "active_source": "ap38420b96a5e4",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": null,
      "enabled": true,
      "hide_player_in_ui": "{<HidePlayerOption.WHEN_UNAVAILABLE: 'when_unavailable'>, <HidePlayerOption.WHEN_SYNCED: 'when_synced'>, <HidePlayerOption.WHEN_GROUP_ACTIVE: 'when_group_active'>}",
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 20,
      "extra_attributes": {},
      "power_control": "none",
      "volume_control": "native",
      "mute_control": "none"
    },
    {
      "player_id": "apcccc11c4333f",
      "provider": "airplay--cD263UfH",
      "type": {
        "_value_": "player",
        "_name_": "PLAYER",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum with possible Player Types.\n\n    player: A regular player.\n    stereo_pair: Same as player but a dedicated stereo pair of 2 speakers.\n    group: A (dedicated) (sync)group player or (universal) playergroup.\n    ",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlayerType._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlayerType"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "PLAYER",
            "STEREO_PAIR",
            "GROUP",
            "UNKNOWN"
          ],
          "_member_map_": {
            "PLAYER": "<circular_ref:PlayerType>",
            "STEREO_PAIR": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "GROUP": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "player": "<circular_ref:PlayerType>",
            "stereo_pair": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "group": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "PLAYER": "<circular_ref:PlayerType>",
          "STEREO_PAIR": {
            "_value_": "stereo_pair",
            "_name_": "STEREO_PAIR",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "GROUP": {
            "_value_": "group",
            "_name_": "GROUP",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "name": "User’s Bedroom speaker+ (AirPlay)",
      "available": true,
      "device_info": {
        "model": "aircast",
        "manufacturer": "AirPlay",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": "192.168.1.104",
        "mac_address": null
      },
      "supported_features": "{<PlayerFeature.SET_MEMBERS: 'set_members'>, <PlayerFeature.VOLUME_SET: 'volume_set'>, <PlayerFeature.PAUSE: 'pause'>, <PlayerFeature.MULTI_DEVICE_DSP: 'multi_device_dsp'>}",
      "playback_state": {
        "_value_": "idle",
        "_name_": "IDLE",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum for the (playback)state of a player.",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlaybackState._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlaybackState"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "IDLE",
            "PAUSED",
            "PLAYING",
            "UNKNOWN"
          ],
          "_member_map_": {
            "IDLE": "<circular_ref:PlaybackState>",
            "PAUSED": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "PLAYING": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "idle": "<circular_ref:PlaybackState>",
            "paused": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "playing": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "IDLE": "<circular_ref:PlaybackState>",
          "PAUSED": {
            "_value_": "paused",
            "_name_": "PAUSED",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "PLAYING": {
            "_value_": "playing",
            "_name_": "PLAYING",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "elapsed_time": null,
      "elapsed_time_last_updated": null,
      "powered": true,
      "volume_level": 20,
      "volume_muted": null,
      "group_members": [],
      "can_group_with": "{'airplay--cD263UfH'}",
      "synced_to": null,
      "active_source": "apcccc11c4333f",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": null,
      "enabled": true,
      "hide_player_in_ui": "{<HidePlayerOption.WHEN_UNAVAILABLE: 'when_unavailable'>, <HidePlayerOption.WHEN_SYNCED: 'when_synced'>, <HidePlayerOption.WHEN_GROUP_ACTIVE: 'when_group_active'>}",
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 20,
      "extra_attributes": {},
      "power_control": "none",
      "volume_control": "native",
      "mute_control": "none"
    },
    {
      "player_id": "ap8a14ed0d704c",
      "provider": "airplay--cD263UfH",
      "type": {
        "_value_": "player",
        "_name_": "PLAYER",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum with possible Player Types.\n\n    player: A regular player.\n    stereo_pair: Same as player but a dedicated stereo pair of 2 speakers.\n    group: A (dedicated) (sync)group player or (universal) playergroup.\n    ",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlayerType._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlayerType"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "PLAYER",
            "STEREO_PAIR",
            "GROUP",
            "UNKNOWN"
          ],
          "_member_map_": {
            "PLAYER": "<circular_ref:PlayerType>",
            "STEREO_PAIR": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "GROUP": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "player": "<circular_ref:PlayerType>",
            "stereo_pair": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "group": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "PLAYER": "<circular_ref:PlayerType>",
          "STEREO_PAIR": {
            "_value_": "stereo_pair",
            "_name_": "STEREO_PAIR",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "GROUP": {
            "_value_": "group",
            "_name_": "GROUP",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "name": "Emily’s iMac (AirPlay)",
      "available": true,
      "device_info": {
        "model": "iMac21,2",
        "manufacturer": "AirPlay",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": "192.168.1.70",
        "mac_address": null
      },
      "supported_features": "{<PlayerFeature.SET_MEMBERS: 'set_members'>, <PlayerFeature.VOLUME_SET: 'volume_set'>, <PlayerFeature.PAUSE: 'pause'>, <PlayerFeature.MULTI_DEVICE_DSP: 'multi_device_dsp'>}",
      "playback_state": {
        "_value_": "idle",
        "_name_": "IDLE",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum for the (playback)state of a player.",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlaybackState._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlaybackState"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "IDLE",
            "PAUSED",
            "PLAYING",
            "UNKNOWN"
          ],
          "_member_map_": {
            "IDLE": "<circular_ref:PlaybackState>",
            "PAUSED": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "PLAYING": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "idle": "<circular_ref:PlaybackState>",
            "paused": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "playing": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "IDLE": "<circular_ref:PlaybackState>",
          "PAUSED": {
            "_value_": "paused",
            "_name_": "PAUSED",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "PLAYING": {
            "_value_": "playing",
            "_name_": "PLAYING",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "elapsed_time": null,
      "elapsed_time_last_updated": null,
      "powered": true,
      "volume_level": 20,
      "volume_muted": null,
      "group_members": [],
      "can_group_with": "{'airplay--cD263UfH'}",
      "synced_to": null,
      "active_source": "ap8a14ed0d704c",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": null,
      "enabled": true,
      "hide_player_in_ui": "{<HidePlayerOption.WHEN_UNAVAILABLE: 'when_unavailable'>, <HidePlayerOption.WHEN_SYNCED: 'when_synced'>, <HidePlayerOption.WHEN_GROUP_ACTIVE: 'when_group_active'>}",
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 20,
      "extra_attributes": {},
      "power_control": "none",
      "volume_control": "native",
      "mute_control": "none"
    },
    {
      "player_id": "apee3f07a024da",
      "provider": "airplay--cD263UfH",
      "type": {
        "_value_": "player",
        "_name_": "PLAYER",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum with possible Player Types.\n\n    player: A regular player.\n    stereo_pair: Same as player but a dedicated stereo pair of 2 speakers.\n    group: A (dedicated) (sync)group player or (universal) playergroup.\n    ",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlayerType._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlayerType"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "PLAYER",
            "STEREO_PAIR",
            "GROUP",
            "UNKNOWN"
          ],
          "_member_map_": {
            "PLAYER": "<circular_ref:PlayerType>",
            "STEREO_PAIR": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "GROUP": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "player": "<circular_ref:PlayerType>",
            "stereo_pair": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "group": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "PLAYER": "<circular_ref:PlayerType>",
          "STEREO_PAIR": {
            "_value_": "stereo_pair",
            "_name_": "STEREO_PAIR",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "GROUP": {
            "_value_": "group",
            "_name_": "GROUP",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "name": "Living Room (AirPlay)",
      "available": true,
      "device_info": {
        "model": "Unknown",
        "manufacturer": "AirPlay",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": "192.168.1.71",
        "mac_address": null
      },
      "supported_features": "{<PlayerFeature.SET_MEMBERS: 'set_members'>, <PlayerFeature.VOLUME_SET: 'volume_set'>, <PlayerFeature.PAUSE: 'pause'>, <PlayerFeature.MULTI_DEVICE_DSP: 'multi_device_dsp'>}",
      "playback_state": {
        "_value_": "idle",
        "_name_": "IDLE",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum for the (playback)state of a player.",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlaybackState._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlaybackState"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "IDLE",
            "PAUSED",
            "PLAYING",
            "UNKNOWN"
          ],
          "_member_map_": {
            "IDLE": "<circular_ref:PlaybackState>",
            "PAUSED": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "PLAYING": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "idle": "<circular_ref:PlaybackState>",
            "paused": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "playing": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "IDLE": "<circular_ref:PlaybackState>",
          "PAUSED": {
            "_value_": "paused",
            "_name_": "PAUSED",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "PLAYING": {
            "_value_": "playing",
            "_name_": "PLAYING",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "elapsed_time": null,
      "elapsed_time_last_updated": null,
      "powered": true,
      "volume_level": 20,
      "volume_muted": null,
      "group_members": [],
      "can_group_with": "{'airplay--cD263UfH'}",
      "synced_to": null,
      "active_source": "apee3f07a024da",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": null,
      "enabled": true,
      "hide_player_in_ui": "{<HidePlayerOption.WHEN_UNAVAILABLE: 'when_unavailable'>, <HidePlayerOption.WHEN_SYNCED: 'when_synced'>, <HidePlayerOption.WHEN_GROUP_ACTIVE: 'when_group_active'>}",
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 20,
      "extra_attributes": {},
      "power_control": "none",
      "volume_control": "native",
      "mute_control": "none"
    },
    {
      "player_id": "apcccc45557d81",
      "provider": "airplay--cD263UfH",
      "type": {
        "_value_": "player",
        "_name_": "PLAYER",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum with possible Player Types.\n\n    player: A regular player.\n    stereo_pair: Same as player but a dedicated stereo pair of 2 speakers.\n    group: A (dedicated) (sync)group player or (universal) playergroup.\n    ",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlayerType._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlayerType"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "PLAYER",
            "STEREO_PAIR",
            "GROUP",
            "UNKNOWN"
          ],
          "_member_map_": {
            "PLAYER": "<circular_ref:PlayerType>",
            "STEREO_PAIR": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "GROUP": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "player": "<circular_ref:PlayerType>",
            "stereo_pair": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "group": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "PLAYER": "<circular_ref:PlayerType>",
          "STEREO_PAIR": {
            "_value_": "stereo_pair",
            "_name_": "STEREO_PAIR",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "GROUP": {
            "_value_": "group",
            "_name_": "GROUP",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "name": "Main Bedroom Speaker+ (AirPlay)",
      "available": true,
      "device_info": {
        "model": "aircast",
        "manufacturer": "AirPlay",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": "192.168.1.104",
        "mac_address": null
      },
      "supported_features": "{<PlayerFeature.SET_MEMBERS: 'set_members'>, <PlayerFeature.VOLUME_SET: 'volume_set'>, <PlayerFeature.PAUSE: 'pause'>, <PlayerFeature.MULTI_DEVICE_DSP: 'multi_device_dsp'>}",
      "playback_state": {
        "_value_": "idle",
        "_name_": "IDLE",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum for the (playback)state of a player.",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlaybackState._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlaybackState"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "IDLE",
            "PAUSED",
            "PLAYING",
            "UNKNOWN"
          ],
          "_member_map_": {
            "IDLE": "<circular_ref:PlaybackState>",
            "PAUSED": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "PLAYING": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "idle": "<circular_ref:PlaybackState>",
            "paused": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "playing": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "IDLE": "<circular_ref:PlaybackState>",
          "PAUSED": {
            "_value_": "paused",
            "_name_": "PAUSED",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "PLAYING": {
            "_value_": "playing",
            "_name_": "PLAYING",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "elapsed_time": null,
      "elapsed_time_last_updated": null,
      "powered": true,
      "volume_level": 20,
      "volume_muted": null,
      "group_members": [],
      "can_group_with": "{'airplay--cD263UfH'}",
      "synced_to": null,
      "active_source": "apcccc45557d81",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": null,
      "enabled": true,
      "hide_player_in_ui": "{<HidePlayerOption.WHEN_UNAVAILABLE: 'when_unavailable'>, <HidePlayerOption.WHEN_SYNCED: 'when_synced'>, <HidePlayerOption.WHEN_GROUP_ACTIVE: 'when_group_active'>}",
      "expose_to_ha": true,
      "icon": "mdi-speaker",
      "group_volume": 20,
      "extra_attributes": {},
      "power_control": "none",
      "volume_control": "native",
      "mute_control": "none"
    },
    {
      "player_id": "ma_eq45rvwkkz",
      "provider": "builtin_player",
      "type": {
        "_value_": "player",
        "_name_": "PLAYER",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum with possible Player Types.\n\n    player: A regular player.\n    stereo_pair: Same as player but a dedicated stereo pair of 2 speakers.\n    group: A (dedicated) (sync)group player or (universal) playergroup.\n    ",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlayerType._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlayerType"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "PLAYER",
            "STEREO_PAIR",
            "GROUP",
            "UNKNOWN"
          ],
          "_member_map_": {
            "PLAYER": "<circular_ref:PlayerType>",
            "STEREO_PAIR": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "GROUP": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "player": "<circular_ref:PlayerType>",
            "stereo_pair": {
              "_value_": "stereo_pair",
              "_name_": "STEREO_PAIR",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "group": {
              "_value_": "group",
              "_name_": "GROUP",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "PLAYER": "<circular_ref:PlayerType>",
          "STEREO_PAIR": {
            "_value_": "stereo_pair",
            "_name_": "STEREO_PAIR",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "GROUP": {
            "_value_": "group",
            "_name_": "GROUP",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "name": "This Device",
      "available": true,
      "device_info": {
        "model": "Unknown model",
        "manufacturer": "Unknown Manufacturer",
        "software_version": null,
        "model_id": null,
        "manufacturer_id": null,
        "ip_address": null,
        "mac_address": null
      },
      "supported_features": "{<PlayerFeature.POWER: 'power'>, <PlayerFeature.VOLUME_SET: 'volume_set'>, <PlayerFeature.PAUSE: 'pause'>, <PlayerFeature.VOLUME_MUTE: 'volume_mute'>}",
      "playback_state": {
        "_value_": "idle",
        "_name_": "IDLE",
        "__objclass__": {
          "_generate_next_value_": {
            "__module__": "enum",
            "__name__": "_generate_next_value_",
            "__qualname__": "StrEnum._generate_next_value_",
            "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
            "__annotations__": {}
          },
          "__module__": "music_assistant_models.enums",
          "__doc__": "Enum for the (playback)state of a player.",
          "_missing_": {
            "__module__": "music_assistant_models.enums",
            "__name__": "_missing_",
            "__qualname__": "PlaybackState._missing_",
            "__doc__": "Set default enum member if an unknown value is provided.",
            "__annotations__": {
              "value": "object",
              "return": "PlaybackState"
            }
          },
          "_new_member_": {},
          "_use_args_": true,
          "_member_names_": [
            "IDLE",
            "PAUSED",
            "PLAYING",
            "UNKNOWN"
          ],
          "_member_map_": {
            "IDLE": "<circular_ref:PlaybackState>",
            "PAUSED": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "PLAYING": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_value2member_map_": {
            "idle": "<circular_ref:PlaybackState>",
            "paused": {
              "_value_": "paused",
              "_name_": "PAUSED",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 1
            },
            "playing": {
              "_value_": "playing",
              "_name_": "PLAYING",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 2
            },
            "unknown": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:EnumType>",
              "_sort_order_": 3
            }
          },
          "_unhashable_values_": [],
          "_member_type_": {
            "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
            "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
            "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
            "__le__": "<slot wrapper '__le__' of 'str' objects>",
            "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
            "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
            "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
            "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
            "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
            "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
            "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
            "__len__": "<slot wrapper '__len__' of 'str' objects>",
            "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
            "__add__": "<slot wrapper '__add__' of 'str' objects>",
            "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
            "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
            "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
            "encode": "<method 'encode' of 'str' objects>",
            "replace": "<method 'replace' of 'str' objects>",
            "split": "<method 'split' of 'str' objects>",
            "rsplit": "<method 'rsplit' of 'str' objects>",
            "join": "<method 'join' of 'str' objects>",
            "capitalize": "<method 'capitalize' of 'str' objects>",
            "casefold": "<method 'casefold' of 'str' objects>",
            "title": "<method 'title' of 'str' objects>",
            "center": "<method 'center' of 'str' objects>",
            "count": "<method 'count' of 'str' objects>",
            "expandtabs": "<method 'expandtabs' of 'str' objects>",
            "find": "<method 'find' of 'str' objects>",
            "partition": "<method 'partition' of 'str' objects>",
            "index": "<method 'index' of 'str' objects>",
            "ljust": "<method 'ljust' of 'str' objects>",
            "lower": "<method 'lower' of 'str' objects>",
            "lstrip": "<method 'lstrip' of 'str' objects>",
            "rfind": "<method 'rfind' of 'str' objects>",
            "rindex": "<method 'rindex' of 'str' objects>",
            "rjust": "<method 'rjust' of 'str' objects>",
            "rstrip": "<method 'rstrip' of 'str' objects>",
            "rpartition": "<method 'rpartition' of 'str' objects>",
            "splitlines": "<method 'splitlines' of 'str' objects>",
            "strip": "<method 'strip' of 'str' objects>",
            "swapcase": "<method 'swapcase' of 'str' objects>",
            "translate": "<method 'translate' of 'str' objects>",
            "upper": "<method 'upper' of 'str' objects>",
            "startswith": "<method 'startswith' of 'str' objects>",
            "endswith": "<method 'endswith' of 'str' objects>",
            "removeprefix": "<method 'removeprefix' of 'str' objects>",
            "removesuffix": "<method 'removesuffix' of 'str' objects>",
            "isascii": "<method 'isascii' of 'str' objects>",
            "islower": "<method 'islower' of 'str' objects>",
            "isupper": "<method 'isupper' of 'str' objects>",
            "istitle": "<method 'istitle' of 'str' objects>",
            "isspace": "<method 'isspace' of 'str' objects>",
            "isdecimal": "<method 'isdecimal' of 'str' objects>",
            "isdigit": "<method 'isdigit' of 'str' objects>",
            "isnumeric": "<method 'isnumeric' of 'str' objects>",
            "isalpha": "<method 'isalpha' of 'str' objects>",
            "isalnum": "<method 'isalnum' of 'str' objects>",
            "isidentifier": "<method 'isidentifier' of 'str' objects>",
            "isprintable": "<method 'isprintable' of 'str' objects>",
            "zfill": "<method 'zfill' of 'str' objects>",
            "format": "<method 'format' of 'str' objects>",
            "format_map": "<method 'format_map' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "maketrans": {},
            "__sizeof__": "<method '__sizeof__' of 'str' objects>",
            "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
            "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
          },
          "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
          "IDLE": "<circular_ref:PlaybackState>",
          "PAUSED": {
            "_value_": "paused",
            "_name_": "PAUSED",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 1
          },
          "PLAYING": {
            "_value_": "playing",
            "_name_": "PLAYING",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 2
          },
          "UNKNOWN": {
            "_value_": "unknown",
            "_name_": "UNKNOWN",
            "__objclass__": "<circular_ref:EnumType>",
            "_sort_order_": 3
          },
          "__str__": "<slot wrapper '__str__' of 'str' objects>",
          "__format__": "<method '__format__' of 'str' objects>",
          "__new__": {}
        },
        "_sort_order_": 0
      },
      "elapsed_time": 0.0,
      "elapsed_time_last_updated": 1754771667.1991527,
      "powered": false,
      "volume_level": 100,
      "volume_muted": false,
      "group_members": [],
      "can_group_with": "set()",
      "synced_to": null,
      "active_source": "ma_eq45rvwkkz",
      "source_list": [
        {
          "id": "spotify_connect--vaHbYqWc",
          "name": "Spotify Connect",
          "passive": true,
          "can_play_pause": false,
          "can_seek": false,
          "can_next_previous": false
        }
      ],
      "active_group": null,
      "current_media": {
        "uri": "http://192.168.1.104:8097/flow/DUYSEN9M/ma_eq45rvwkkz/0d308b0a87574f89ba9d7b8a01988d4b.flac",
        "media_type": {
          "_value_": "flow_stream",
          "_name_": "FLOW_STREAM",
          "__objclass__": {
            "_generate_next_value_": {
              "__module__": "enum",
              "__name__": "_generate_next_value_",
              "__qualname__": "StrEnum._generate_next_value_",
              "__doc__": "\n        Return the lower-cased version of the member name.\n        ",
              "__annotations__": {}
            },
            "__module__": "music_assistant_models.enums",
            "__doc__": "Enum for MediaType.",
            "_missing_": {
              "__module__": "music_assistant_models.enums",
              "__name__": "_missing_",
              "__qualname__": "MediaType._missing_",
              "__doc__": "Set default enum member if an unknown value is provided.",
              "__annotations__": {
                "value": "object",
                "return": "MediaType"
              }
            },
            "_new_member_": {},
            "_use_args_": true,
            "_member_names_": [
              "ARTIST",
              "ALBUM",
              "TRACK",
              "PLAYLIST",
              "RADIO",
              "AUDIOBOOK",
              "PODCAST",
              "PODCAST_EPISODE",
              "FOLDER",
              "ANNOUNCEMENT",
              "FLOW_STREAM",
              "PLUGIN_SOURCE",
              "UNKNOWN"
            ],
            "_member_map_": {
              "ARTIST": {
                "_value_": "artist",
                "_name_": "ARTIST",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 0
              },
              "ALBUM": {
                "_value_": "album",
                "_name_": "ALBUM",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 1
              },
              "TRACK": {
                "_value_": "track",
                "_name_": "TRACK",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 2
              },
              "PLAYLIST": {
                "_value_": "playlist",
                "_name_": "PLAYLIST",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 3
              },
              "RADIO": {
                "_value_": "radio",
                "_name_": "RADIO",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 4
              },
              "AUDIOBOOK": {
                "_value_": "audiobook",
                "_name_": "AUDIOBOOK",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 5
              },
              "PODCAST": {
                "_value_": "podcast",
                "_name_": "PODCAST",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 6
              },
              "PODCAST_EPISODE": {
                "_value_": "podcast_episode",
                "_name_": "PODCAST_EPISODE",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 7
              },
              "FOLDER": {
                "_value_": "folder",
                "_name_": "FOLDER",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 8
              },
              "ANNOUNCEMENT": {
                "_value_": "announcement",
                "_name_": "ANNOUNCEMENT",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 9
              },
              "FLOW_STREAM": "<circular_ref:MediaType>",
              "PLUGIN_SOURCE": {
                "_value_": "plugin_source",
                "_name_": "PLUGIN_SOURCE",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 11
              },
              "UNKNOWN": {
                "_value_": "unknown",
                "_name_": "UNKNOWN",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 12
              }
            },
            "_value2member_map_": {
              "artist": {
                "_value_": "artist",
                "_name_": "ARTIST",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 0
              },
              "album": {
                "_value_": "album",
                "_name_": "ALBUM",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 1
              },
              "track": {
                "_value_": "track",
                "_name_": "TRACK",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 2
              },
              "playlist": {
                "_value_": "playlist",
                "_name_": "PLAYLIST",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 3
              },
              "radio": {
                "_value_": "radio",
                "_name_": "RADIO",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 4
              },
              "audiobook": {
                "_value_": "audiobook",
                "_name_": "AUDIOBOOK",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 5
              },
              "podcast": {
                "_value_": "podcast",
                "_name_": "PODCAST",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 6
              },
              "podcast_episode": {
                "_value_": "podcast_episode",
                "_name_": "PODCAST_EPISODE",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 7
              },
              "folder": {
                "_value_": "folder",
                "_name_": "FOLDER",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 8
              },
              "announcement": {
                "_value_": "announcement",
                "_name_": "ANNOUNCEMENT",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 9
              },
              "flow_stream": "<circular_ref:MediaType>",
              "plugin_source": {
                "_value_": "plugin_source",
                "_name_": "PLUGIN_SOURCE",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 11
              },
              "unknown": {
                "_value_": "unknown",
                "_name_": "UNKNOWN",
                "__objclass__": "<circular_ref:MediaTypeMeta>",
                "_sort_order_": 12
              }
            },
            "_unhashable_values_": [],
            "_member_type_": {
              "__new__": "<built-in method __new__ of type object at 0x105abc1e0>",
              "__repr__": "<slot wrapper '__repr__' of 'str' objects>",
              "__hash__": "<slot wrapper '__hash__' of 'str' objects>",
              "__str__": "<slot wrapper '__str__' of 'str' objects>",
              "__lt__": "<slot wrapper '__lt__' of 'str' objects>",
              "__le__": "<slot wrapper '__le__' of 'str' objects>",
              "__eq__": "<slot wrapper '__eq__' of 'str' objects>",
              "__ne__": "<slot wrapper '__ne__' of 'str' objects>",
              "__gt__": "<slot wrapper '__gt__' of 'str' objects>",
              "__ge__": "<slot wrapper '__ge__' of 'str' objects>",
              "__iter__": "<slot wrapper '__iter__' of 'str' objects>",
              "__mod__": "<slot wrapper '__mod__' of 'str' objects>",
              "__rmod__": "<slot wrapper '__rmod__' of 'str' objects>",
              "__len__": "<slot wrapper '__len__' of 'str' objects>",
              "__getitem__": "<slot wrapper '__getitem__' of 'str' objects>",
              "__add__": "<slot wrapper '__add__' of 'str' objects>",
              "__mul__": "<slot wrapper '__mul__' of 'str' objects>",
              "__rmul__": "<slot wrapper '__rmul__' of 'str' objects>",
              "__contains__": "<slot wrapper '__contains__' of 'str' objects>",
              "encode": "<method 'encode' of 'str' objects>",
              "replace": "<method 'replace' of 'str' objects>",
              "split": "<method 'split' of 'str' objects>",
              "rsplit": "<method 'rsplit' of 'str' objects>",
              "join": "<method 'join' of 'str' objects>",
              "capitalize": "<method 'capitalize' of 'str' objects>",
              "casefold": "<method 'casefold' of 'str' objects>",
              "title": "<method 'title' of 'str' objects>",
              "center": "<method 'center' of 'str' objects>",
              "count": "<method 'count' of 'str' objects>",
              "expandtabs": "<method 'expandtabs' of 'str' objects>",
              "find": "<method 'find' of 'str' objects>",
              "partition": "<method 'partition' of 'str' objects>",
              "index": "<method 'index' of 'str' objects>",
              "ljust": "<method 'ljust' of 'str' objects>",
              "lower": "<method 'lower' of 'str' objects>",
              "lstrip": "<method 'lstrip' of 'str' objects>",
              "rfind": "<method 'rfind' of 'str' objects>",
              "rindex": "<method 'rindex' of 'str' objects>",
              "rjust": "<method 'rjust' of 'str' objects>",
              "rstrip": "<method 'rstrip' of 'str' objects>",
              "rpartition": "<method 'rpartition' of 'str' objects>",
              "splitlines": "<method 'splitlines' of 'str' objects>",
              "strip": "<method 'strip' of 'str' objects>",
              "swapcase": "<method 'swapcase' of 'str' objects>",
              "translate": "<method 'translate' of 'str' objects>",
              "upper": "<method 'upper' of 'str' objects>",
              "startswith": "<method 'startswith' of 'str' objects>",
              "endswith": "<method 'endswith' of 'str' objects>",
              "removeprefix": "<method 'removeprefix' of 'str' objects>",
              "removesuffix": "<method 'removesuffix' of 'str' objects>",
              "isascii": "<method 'isascii' of 'str' objects>",
              "islower": "<method 'islower' of 'str' objects>",
              "isupper": "<method 'isupper' of 'str' objects>",
              "istitle": "<method 'istitle' of 'str' objects>",
              "isspace": "<method 'isspace' of 'str' objects>",
              "isdecimal": "<method 'isdecimal' of 'str' objects>",
              "isdigit": "<method 'isdigit' of 'str' objects>",
              "isnumeric": "<method 'isnumeric' of 'str' objects>",
              "isalpha": "<method 'isalpha' of 'str' objects>",
              "isalnum": "<method 'isalnum' of 'str' objects>",
              "isidentifier": "<method 'isidentifier' of 'str' objects>",
              "isprintable": "<method 'isprintable' of 'str' objects>",
              "zfill": "<method 'zfill' of 'str' objects>",
              "format": "<method 'format' of 'str' objects>",
              "format_map": "<method 'format_map' of 'str' objects>",
              "__format__": "<method '__format__' of 'str' objects>",
              "maketrans": {},
              "__sizeof__": "<method '__sizeof__' of 'str' objects>",
              "__getnewargs__": "<method '__getnewargs__' of 'str' objects>",
              "__doc__": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'."
            },
            "_value_repr_": "<slot wrapper '__repr__' of 'str' objects>",
            "ARTIST": {
              "_value_": "artist",
              "_name_": "ARTIST",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 0
            },
            "ALBUM": {
              "_value_": "album",
              "_name_": "ALBUM",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 1
            },
            "TRACK": {
              "_value_": "track",
              "_name_": "TRACK",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 2
            },
            "PLAYLIST": {
              "_value_": "playlist",
              "_name_": "PLAYLIST",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 3
            },
            "RADIO": {
              "_value_": "radio",
              "_name_": "RADIO",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 4
            },
            "AUDIOBOOK": {
              "_value_": "audiobook",
              "_name_": "AUDIOBOOK",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 5
            },
            "PODCAST": {
              "_value_": "podcast",
              "_name_": "PODCAST",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 6
            },
            "PODCAST_EPISODE": {
              "_value_": "podcast_episode",
              "_name_": "PODCAST_EPISODE",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 7
            },
            "FOLDER": {
              "_value_": "folder",
              "_name_": "FOLDER",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 8
            },
            "ANNOUNCEMENT": {
              "_value_": "announcement",
              "_name_": "ANNOUNCEMENT",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 9
            },
            "FLOW_STREAM": "<circular_ref:MediaType>",
            "PLUGIN_SOURCE": {
              "_value_": "plugin_source",
              "_name_": "PLUGIN_SOURCE",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 11
            },
            "UNKNOWN": {
              "_value_": "unknown",
              "_name_": "UNKNOWN",
              "__objclass__": "<circular_ref:MediaTypeMeta>",
              "_sort_order_": 12
            },
            "__str__": "<slot wrapper '__str__' of 'str' objects>",
            "__format__": "<method '__format__' of 'str' objects>",
            "__new__": {}
          },
          "_sort_order_": 10
        },
        "title": "Music Assistant",
        "artist": null,
        "album": null,
        "image_url": "https://github.com/home-assistant/brands/raw/master/custom_integrations/mass/icon%402x.png",
        "duration": 346,
        "queue_id": "ma_eq45rvwkkz",
        "queue_item_id": "0d308b0a87574f89ba9d7b8a01988d4b",
        "custom_data": null
      },
      "enabled": true,
      "hide_player_in_ui": "{<HidePlayerOption.ALWAYS: 'always'>}",
      "expose_to_ha": false,
      "icon": "mdi-speaker",
      "group_volume": 100,
      "extra_attributes": {},
      "power_control": "native",
      "volume_control": "native",
      "mute_control": "native"
    }
  ]
}